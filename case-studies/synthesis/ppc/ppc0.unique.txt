===== PPC_0: uniqueness experiment =====

----- Generating PPC_0... -----

Tests: 768
  positive: 163
  negative: 605

Sketch state space: 2^1406

Synthesizing...
[0.44s; 442ms][synth] interpreted test test/ppc/podwr000(#t)
[0.44s; 0ms][synth] interpreted test test/ppc/rfe000(#f)
[0.51s; 64ms][synth] found candidate: (memory-model anon
        ppo: (& po (& (join loc (~ loc)) (-> (& Writes Reads) (& Writes Reads))))
        grf: (& (join loc (~ loc)) rf)
         ab: (+ (:> (:> (:> (:> (join (:> po Syncs) po) Reads) Reads) Reads) Reads) (:> (:> (:> (:> (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) Reads) Reads) Reads) Reads))
       llh?: #f)
[0.51s; 1ms][synth] tested test/ppc/podww000(#t)
[0.51s; 0ms][synth] tested test/ppc/bclwdww000(#t)
[0.51s; 0ms][synth] tested test/ppc/bclwdww019(#t)
[0.51s; 0ms][synth] tested test/ppc/podrr000(#t)
[0.51s; 0ms][synth] tested test/ppc/podrw000(#t)
[0.51s; 0ms][synth] tested test/ppc/rfe002(#t)
[0.51s; 0ms][synth] tested test/ppc/rfe003(#t)
[0.51s; 0ms][synth] tested test/ppc/safe011(#f)
[0.51s; 0ms][synth] found next test
[0.88s; 364ms][synth] interpreted test test/ppc/safe011(#f)
[1.01s; 139ms][synth] found candidate: (memory-model anon
        ppo: (& po (-> (+ Writes (- (+ Writes MemoryEvent) Writes)) (- Writes (& Writes Reads))))
        grf: (& (join loc (~ loc)) rf)
         ab: (+ (:> (:> (:> (:> (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) Reads) Reads) Reads) Reads) (join (:> (+ (:> (join (:> po Syncs) po) Reads) (:> (join (:> po Syncs) po) Writes)) (+ Writes Reads)) (+ (+ (:> (join (:> po Syncs) po) Reads) (+ rf (join (:> po Syncs) po))) (:> (:> (join (:> po Syncs) po) Reads) Reads))))
       llh?: #f)
[1.02s; 1ms][synth] tested test/ppc/podww000(#t)
[1.02s; 0ms][synth] found next test
[1.28s; 258ms][synth] interpreted test test/ppc/podww000(#t)
[1.29s; 16ms][synth] found candidate: (memory-model anon
        ppo: (& po (-> (- (+ Writes (- MemoryEvent Writes)) (- Writes (- Reads Writes))) (- Writes (& Writes Reads))))
        grf: (-> none none)
         ab: (+ (+ (+ (:> (join (join (:> po Syncs) po) (join (:> po Syncs) po)) (join (join (:> po Syncs) po) Reads)) (:> (+ rf (join (:> po Syncs) po)) Writes)) (:> (:> (:> (join (:> po Syncs) po) Reads) Reads) (join (:> (join (:> po Syncs) po) Reads) Reads))) (+ (+ (+ (<: Writes rf) (:> (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) Reads)) (:> (:> (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) Reads) (join (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) Reads))) (:> (:> (:> (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) Reads) Reads) Reads)))
       llh?: #f)
[1.3s; 1ms][synth] tested test/ppc/bclwdww000(#t)
[1.3s; 0ms][synth] tested test/ppc/bclwdww019(#t)
[1.3s; 0ms][synth] tested test/ppc/podrr000(#t)
[1.3s; 0ms][synth] tested test/ppc/podrw000(#t)
[1.3s; 0ms][synth] found next test
[1.63s; 333ms][synth] interpreted test test/ppc/podrw000(#t)
[1.69s; 61ms][synth] found candidate: (memory-model anon
        ppo: (& po (- (& dp (-> MemoryEvent MemoryEvent)) (+ (+ (- po dp) (-> MemoryEvent Reads)) (- (& (join loc (~ loc)) (-> Writes Writes)) po))))
        grf: (& (join loc (~ loc)) rf)
         ab: (+ (:> (:> (:> (:> (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) Reads) Reads) Reads) Reads) (+ (:> (:> (:> (join (:> po Syncs) po) Reads) Reads) (join (:> (join (:> po Syncs) po) Reads) Reads)) (+ (:> (join (:> po Syncs) po) Reads) (+ rf (join (join (:> po Syncs) po) rf)))))
       llh?: #f)
[1.7s; 1ms][synth] tested test/ppc/bclwdww000(#t)
[1.7s; 0ms][synth] tested test/ppc/bclwdww019(#t)
[1.7s; 0ms][synth] tested test/ppc/podrr000(#t)
[1.7s; 0ms][synth] tested test/ppc/rfe002(#t)
[1.7s; 0ms][synth] found next test
[2.04s; 340ms][synth] interpreted test test/ppc/rfe002(#t)
[2.07s; 33ms][synth] found candidate: (memory-model anon
        ppo: (& po (- (& dp (-> MemoryEvent MemoryEvent)) (+ (+ (- po dp) (-> MemoryEvent Reads)) (- (& (join loc (~ loc)) (-> Writes Writes)) po))))
        grf: (-> none none)
         ab: (+ (+ (+ (:> (:> (join (:> po Syncs) po) Reads) (:> Reads Writes)) (<: (join Reads (join (:> po Syncs) po)) (join (:> po Syncs) po))) (:> (join (:> (join (:> po Syncs) po) Writes) (:> rf Reads)) (+ Reads (join (join (:> po Syncs) po) Writes)))) (<: (:> (join Reads (:> (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) Reads)) Reads) (:> (:> (:> (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) Reads) Reads) Reads)))
       llh?: #f)
[2.07s; 1ms][synth] tested test/ppc/bclwdww000(#t)
[2.07s; 0ms][synth] tested test/ppc/bclwdww019(#t)
[2.07s; 1ms][synth] tested test/ppc/podrr000(#t)
[2.07s; 0ms][synth] tested test/ppc/rfe003(#t)
[2.08s; 0ms][synth] tested test/ppc/safe320(#f)
[2.08s; 0ms][synth] found next test
[2.41s; 331ms][synth] interpreted test test/ppc/safe320(#f)
[2.45s; 42ms][synth] found candidate: (memory-model anon
        ppo: (& po (- (& dp (-> MemoryEvent MemoryEvent)) (+ (- (& (join loc (~ loc)) (-> Writes Writes)) po) (+ (- po dp) (& (join loc (~ loc)) (-> Writes Writes))))))
        grf: (-> none none)
         ab: (+ (<: (:> (join Reads (:> (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) Reads)) Reads) (:> (:> (:> (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) Reads) Reads) Reads)) (+ (:> (join (:> (join (:> po Syncs) po) Writes) (:> rf Reads)) (+ Reads (join (join (:> po Syncs) po) Writes))) (+ (:> (:> (join (:> po Syncs) po) Reads) (:> Reads Writes)) (<: (join Reads (join (:> po Syncs) po)) (:> (join (:> po Syncs) po) Reads)))))
       llh?: #f)
[2.45s; 1ms][synth] tested test/ppc/bclwdww000(#t)
[2.45s; 0ms][synth] tested test/ppc/bclwdww019(#t)
[2.45s; 0ms][synth] tested test/ppc/podrr000(#t)
[2.45s; 0ms][synth] tested test/ppc/rfe003(#t)
[2.45s; 1ms][synth] tested test/ppc/aclwdrr023(#f)
[2.45s; 0ms][synth] found next test
[2.86s; 410ms][synth] interpreted test test/ppc/aclwdrr023(#f)
[2.92s; 58ms][synth] found candidate: (memory-model anon
        ppo: (& po (- (& dp (-> MemoryEvent MemoryEvent)) (+ (- (& (join loc (~ loc)) (-> Writes Writes)) po) (+ (- po dp) (& (join loc (~ loc)) (-> Writes Writes))))))
        grf: (-> none none)
         ab: (+ (+ (:> (join (:> (join (:> po Syncs) po) Writes) (:> rf Reads)) (+ Reads (join (join (:> po Syncs) po) Writes))) (+ (:> (:> (join (:> po Syncs) po) Reads) (:> Reads Writes)) (<: (join Reads (join (:> po Syncs) po)) (:> (join (:> po Syncs) po) Reads)))) (<: (:> (join Writes (:> rf Reads)) Reads) (+ (:> (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) Reads) (:> (:> (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) Reads) (join (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) Reads)))))
       llh?: #f)
[2.93s; 1ms][synth] tested test/ppc/bclwdww000(#t)
[2.93s; 1ms][synth] tested test/ppc/bclwdww019(#t)
[2.93s; 0ms][synth] tested test/ppc/podrr000(#t)
[2.93s; 0ms][synth] tested test/ppc/rfe003(#t)
[2.93s; 0ms][synth] tested test/ppc/aclwdrr036(#t)
[2.93s; 0ms][synth] tested test/ppc/bclwdww013(#f)
[2.93s; 0ms][synth] found next test
[3.34s; 412ms][synth] interpreted test test/ppc/bclwdww013(#f)
[3.5s; 159ms][synth] found candidate: (memory-model anon
        ppo: (& po (- (& (& (-> MemoryEvent MemoryEvent) (+ po dp)) (- po (-> Writes Reads))) (- (-> (+ Writes Reads) Writes) (& po dp))))
        grf: (-> none none)
         ab: (+ (join (+ (:> (:> (join (:> po Syncs) po) Reads) Reads) (+ (:> (join (:> po Syncs) po) Reads) (:> (join (:> po Syncs) po) Writes))) (+ (+ (:> (join (:> po Syncs) po) Reads) (+ rf (join (:> po Syncs) po))) (:> (:> (join (:> po Syncs) po) Reads) Reads))) (<: (join (:> (:> rf Reads) Reads) Reads) (:> (:> (join rf (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po))) (+ Writes Reads)) (join Reads (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po))))))
       llh?: #f)
[3.5s; 1ms][synth] tested test/ppc/bclwdww000(#t)
[3.51s; 0ms][synth] tested test/ppc/bclwdww019(#t)
[3.51s; 0ms][synth] tested test/ppc/podrr000(#t)
[3.51s; 0ms][synth] found next test
[3.84s; 333ms][synth] interpreted test test/ppc/podrr000(#t)
[3.97s; 129ms][synth] found candidate: (memory-model anon
        ppo: (& po (+ (& (join loc (~ loc)) (-> Writes Writes)) (- (- po (- po dp)) (& (join loc (~ loc)) (-> (& Writes Reads) (& Writes Reads))))))
        grf: (-> none none)
         ab: (+ (<: (join (:> (+ rf (join (:> po Syncs) po)) (+ Writes Reads)) Writes) (:> (+ (join (join (:> po Syncs) po) rf) (<: Writes (join (:> po Syncs) po))) (join (+ Writes Reads) (+ rf (join (:> po Syncs) po))))) (:> (+ (+ (join (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) rf) (:> (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) Writes)) (join (+ rf (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po))) (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)))) (join (+ Writes Reads) (:> (+ rf (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po))) (+ Writes Reads)))))
       llh?: #f)
[3.97s; 1ms][synth] tested test/ppc/bclwdww000(#t)
[3.97s; 0ms][synth] found next test
[4.3s; 329ms][synth] interpreted test test/ppc/bclwdww000(#t)
[4.4s; 99ms][synth] found candidate: (memory-model anon
        ppo: (& po (+ (& po dp) (& (-> Writes (- Writes Reads)) (-> (- MemoryEvent Reads) Reads))))
        grf: (-> none none)
         ab: (+ (join (+ (:> (:> (join (:> po Syncs) po) Reads) Reads) (+ (:> (join (:> po Syncs) po) Reads) (:> (join (:> po Syncs) po) Writes))) (+ (+ (:> (join (:> po Syncs) po) Reads) (+ rf (join (:> po Syncs) po))) (:> (:> (join (:> po Syncs) po) Reads) Reads))) (+ (+ (+ (:> (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) Reads) (<: Writes (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)))) (:> (join (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po))) (join (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) Reads))) (:> (:> (join rf (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po))) (+ Writes Reads)) (:> Writes (+ Writes Reads)))))
       llh?: #f)
[4.41s; 1ms][synth] tested test/ppc/bclwdww019(#t)
[4.41s; 0ms][synth] tested test/ppc/rfe003(#t)
[4.41s; 1ms][synth] tested test/ppc/aclwdrr036(#t)
[4.41s; 0ms][synth] tested test/ppc/bclwdww027(#t)
[4.41s; 0ms][synth] tested test/ppc/lwdwr020(#t)
[4.41s; 1ms][synth] tested test/ppc/podrwposwr000(#t)
[4.41s; 0ms][synth] tested test/ppc/podrwposwr019(#t)
[4.41s; 0ms][synth] tested test/ppc/podwr001(#t)
[4.41s; 1ms][synth] tested test/ppc/podww001(#t)
[4.41s; 0ms][synth] tested test/ppc/posrr002(#f)
[4.42s; 0ms][synth] tested test/ppc/posrr008(#f)
[4.42s; 0ms][synth] tested test/ppc/rfe001(#f)
[4.42s; 1ms][synth] tested test/ppc/rfe004(#t)
[4.42s; 0ms][synth] tested test/ppc/rfe005(#t)
[4.42s; 0ms][synth] tested test/ppc/rfe006(#t)
[4.42s; 0ms][synth] tested test/ppc/rfi000(#t)
[4.42s; 1ms][synth] tested test/ppc/rfi001(#t)
[4.42s; 1ms][synth] tested test/ppc/rfi002(#t)
[4.42s; 0ms][synth] tested test/ppc/safe036(#f)
[4.42s; 0ms][synth] found next test
[4.81s; 392ms][synth] interpreted test test/ppc/safe036(#f)
[4.85s; 42ms][synth] found candidate: (memory-model anon
        ppo: (& po (& (+ dp (-> (- MemoryEvent Reads) (- MemoryEvent Reads))) (& (-> (+ Writes MemoryEvent) (+ Writes MemoryEvent)) (- po (-> Writes Writes)))))
        grf: (-> none none)
         ab: (+ (:> (:> (:> (join (join (:> po Syncs) po) rf) Reads) (join Writes (<: Writes rf))) (:> (:> (+ Writes Reads) Reads) (join (+ Writes Reads) (<: Writes rf)))) (+ (+ (+ (:> (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) Reads) (<: Reads (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)))) (:> (join (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) rf) (join (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) Writes))) (:> (:> (join (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po))) Reads) (<: Reads (join (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) Reads)))))
       llh?: #f)
[4.86s; 1ms][synth] tested test/ppc/bclwdww019(#t)
[4.86s; 0ms][synth] tested test/ppc/rfe003(#t)
[4.86s; 0ms][synth] tested test/ppc/aclwdrr036(#t)
[4.86s; 0ms][synth] tested test/ppc/bclwdww027(#t)
[4.86s; 0ms][synth] tested test/ppc/lwdwr020(#t)
[4.86s; 1ms][synth] tested test/ppc/podrwposwr000(#t)
[4.86s; 0ms][synth] tested test/ppc/podrwposwr019(#t)
[4.86s; 0ms][synth] tested test/ppc/podwr001(#t)
[4.86s; 1ms][synth] tested test/ppc/podww001(#t)
[4.86s; 0ms][synth] tested test/ppc/posrr002(#f)
[4.86s; 0ms][synth] tested test/ppc/posrr008(#f)
[4.86s; 0ms][synth] tested test/ppc/rfe001(#f)
[4.86s; 1ms][synth] tested test/ppc/rfe004(#t)
[4.86s; 1ms][synth] tested test/ppc/rfe005(#t)
[4.87s; 0ms][synth] tested test/ppc/rfe006(#t)
[4.87s; 0ms][synth] tested test/ppc/rfi000(#t)
[4.87s; 1ms][synth] tested test/ppc/rfi001(#t)
[4.87s; 1ms][synth] tested test/ppc/rfi002(#t)
[4.87s; 1ms][synth] tested test/ppc/safe045(#f)
[4.87s; 0ms][synth] tested test/ppc/safe069(#f)
[4.87s; 0ms][synth] found next test
[5.26s; 395ms][synth] interpreted test test/ppc/safe069(#f)
[5.3s; 40ms][synth] found candidate: (memory-model anon
        ppo: (& po (& (& (-> (+ Writes MemoryEvent) (+ Writes MemoryEvent)) (- po (-> Writes Writes))) (+ (& po dp) (-> (- MemoryEvent Reads) (- MemoryEvent Reads)))))
        grf: (-> none none)
         ab: (+ (+ (+ (+ (:> (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) Reads) (<: Reads (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)))) (:> (join (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) rf) (join (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) Writes))) (:> (:> (join (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po))) Reads) (<: Reads (join (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) Reads)))) (+ (:> (:> (join (join (:> po Syncs) po) rf) Reads) (join Writes (<: Writes rf))) (:> (:> (<: Writes (join (:> po Syncs) po)) Reads) (join Writes (<: Writes (join (:> po Syncs) po))))))
       llh?: #f)
[5.31s; 1ms][synth] tested test/ppc/bclwdww019(#t)
[5.31s; 0ms][synth] tested test/ppc/rfe003(#t)
[5.31s; 0ms][synth] tested test/ppc/aclwdrr036(#t)
[5.31s; 0ms][synth] tested test/ppc/bclwdww027(#t)
[5.31s; 0ms][synth] tested test/ppc/lwdwr020(#t)
[5.31s; 0ms][synth] tested test/ppc/podrwposwr000(#t)
[5.31s; 0ms][synth] tested test/ppc/podrwposwr019(#t)
[5.31s; 0ms][synth] tested test/ppc/podwr001(#t)
[5.31s; 1ms][synth] tested test/ppc/podww001(#t)
[5.31s; 0ms][synth] tested test/ppc/posrr002(#f)
[5.31s; 0ms][synth] tested test/ppc/posrr008(#f)
[5.31s; 0ms][synth] tested test/ppc/rfe001(#f)
[5.31s; 1ms][synth] tested test/ppc/rfe004(#t)
[5.31s; 0ms][synth] tested test/ppc/rfe005(#t)
[5.31s; 0ms][synth] tested test/ppc/rfe006(#t)
[5.32s; 0ms][synth] tested test/ppc/rfi000(#t)
[5.32s; 1ms][synth] tested test/ppc/rfi001(#t)
[5.32s; 1ms][synth] tested test/ppc/rfi002(#t)
[5.32s; 1ms][synth] tested test/ppc/safe045(#f)
[5.32s; 0ms][synth] tested test/ppc/safe113(#f)
[5.32s; 0ms][synth] found next test
[5.73s; 412ms][synth] interpreted test test/ppc/safe113(#f)
[5.82s; 93ms][synth] found candidate: (memory-model anon
        ppo: (& po (- (- (-> MemoryEvent MemoryEvent) (& (join loc (~ loc)) (-> Writes Writes))) (- (-> (+ Writes Reads) (+ Writes Reads)) (& po dp))))
        grf: (& rf (& (join loc (~ loc)) (& rf (join proc (~ proc)))))
         ab: (+ (+ (+ (:> (:> (join (:> po Syncs) po) Reads) Reads) (<: (join Writes (join (:> po Syncs) po)) (+ rf (join (:> po Syncs) po)))) (:> (join (:> (join (:> po Syncs) po) Reads) (join (:> po Syncs) po)) (join Reads (join (:> po Syncs) po)))) (<: (+ (join (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) Writes) (+ Reads (join (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) Reads))) (+ (:> (join (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) rf) (join (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) Writes)) (<: Writes (:> (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) Reads)))))
       llh?: #f)
[5.83s; 1ms][synth] tested test/ppc/bclwdww019(#t)
[5.83s; 0ms][synth] tested test/ppc/rfe003(#t)
[5.83s; 0ms][synth] tested test/ppc/aclwdrr036(#t)
[5.83s; 0ms][synth] tested test/ppc/bclwdww027(#t)
[5.83s; 0ms][synth] tested test/ppc/lwdwr020(#t)
[5.83s; 0ms][synth] found next test
[6.22s; 388ms][synth] interpreted test test/ppc/lwdwr020(#t)
[6.25s; 29ms][synth] found candidate: (memory-model anon
        ppo: (& po (- (& (-> (- MemoryEvent Writes) MemoryEvent) (& po (-> MemoryEvent MemoryEvent))) (- (-> (+ Writes Reads) (+ Writes Reads)) (& po dp))))
        grf: (-> none none)
         ab: (+ (+ (+ (<: (join Writes (join (:> po Syncs) po)) (+ rf (join (:> po Syncs) po))) (<: Writes (<: Writes (join (:> po Syncs) po)))) (:> (+ (join rf (join (:> po Syncs) po)) (<: Reads (join (:> po Syncs) po))) Reads)) (<: (+ (join (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) Writes) (+ Reads (join (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) Reads))) (+ (:> (join (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) rf) (join (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) Writes)) (<: Writes (:> rf Reads)))))
       llh?: #f)
[6.25s; 1ms][synth] tested test/ppc/bclwdww019(#t)
[6.25s; 1ms][synth] tested test/ppc/rfe003(#t)
[6.25s; 0ms][synth] tested test/ppc/aclwdrr036(#t)
[6.25s; 0ms][synth] tested test/ppc/bclwdww027(#t)
[6.25s; 0ms][synth] tested test/ppc/podrwposwr000(#t)
[6.25s; 0ms][synth] tested test/ppc/podrwposwr019(#t)
[6.26s; 0ms][synth] tested test/ppc/podwr001(#t)
[6.26s; 1ms][synth] tested test/ppc/podww001(#t)
[6.26s; 0ms][synth] tested test/ppc/posrr002(#f)
[6.26s; 0ms][synth] tested test/ppc/posrr008(#f)
[6.26s; 0ms][synth] tested test/ppc/rfe001(#f)
[6.26s; 1ms][synth] tested test/ppc/rfe004(#t)
[6.26s; 1ms][synth] tested test/ppc/rfe005(#t)
[6.26s; 0ms][synth] tested test/ppc/rfe006(#t)
[6.26s; 0ms][synth] tested test/ppc/rfi000(#t)
[6.26s; 0ms][synth] tested test/ppc/rfi001(#t)
[6.26s; 1ms][synth] tested test/ppc/rfi002(#t)
[6.26s; 1ms][synth] tested test/ppc/safe045(#f)
[6.26s; 0ms][synth] found next test
[6.65s; 395ms][synth] interpreted test test/ppc/safe045(#f)
[6.69s; 35ms][synth] found candidate: (memory-model anon
        ppo: (& po (- (& (-> (- MemoryEvent Writes) MemoryEvent) (& po (-> MemoryEvent MemoryEvent))) (- (-> (+ Writes Reads) (+ Writes Reads)) (& po dp))))
        grf: (-> none none)
         ab: (+ (+ (+ (<: (join Writes (join (:> po Syncs) po)) (+ rf (join (:> po Syncs) po))) (<: Writes (<: Writes (join (:> po Syncs) po)))) (:> (+ (join rf (join (:> po Syncs) po)) (<: Reads (join (:> po Syncs) po))) Reads)) (<: (+ (join (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) Writes) (+ Reads (join (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) Reads))) (+ (<: Writes (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po))) (:> (join (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) rf) (join (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) Writes)))))
       llh?: #f)
[6.7s; 1ms][synth] tested test/ppc/bclwdww019(#t)
[6.7s; 0ms][synth] tested test/ppc/rfe003(#t)
[6.7s; 0ms][synth] tested test/ppc/aclwdrr036(#t)
[6.7s; 1ms][synth] tested test/ppc/bclwdww027(#t)
[6.7s; 0ms][synth] tested test/ppc/podrwposwr000(#t)
[6.7s; 0ms][synth] tested test/ppc/podrwposwr019(#t)
[6.7s; 0ms][synth] tested test/ppc/podwr001(#t)
[6.7s; 1ms][synth] tested test/ppc/podww001(#t)
[6.7s; 0ms][synth] tested test/ppc/posrr002(#f)
[6.7s; 0ms][synth] tested test/ppc/posrr008(#f)
[6.7s; 0ms][synth] tested test/ppc/rfe001(#f)
[6.7s; 1ms][synth] tested test/ppc/rfe004(#t)
[6.7s; 0ms][synth] tested test/ppc/rfe005(#t)
[6.7s; 0ms][synth] tested test/ppc/rfe006(#t)
[6.7s; 0ms][synth] tested test/ppc/rfi000(#t)
[6.7s; 1ms][synth] tested test/ppc/rfi001(#t)
[6.7s; 1ms][synth] tested test/ppc/rfi002(#t)
[6.7s; 1ms][synth] tested test/ppc/safe135(#f)
[6.7s; 1ms][synth] tested test/ppc/safe158(#f)
[6.71s; 0ms][synth] tested test/ppc/safe199(#f)
[6.71s; 0ms][synth] tested test/ppc/safe248(#f)
[6.71s; 0ms][synth] found next test
[7.12s; 410ms][synth] interpreted test test/ppc/safe248(#f)
[7.17s; 52ms][synth] found candidate: (memory-model anon
        ppo: (& po (- (& (-> (- MemoryEvent Writes) MemoryEvent) (& po (-> MemoryEvent MemoryEvent))) (- (-> (+ Writes Reads) (+ Writes Reads)) (& po dp))))
        grf: (-> none none)
         ab: (+ (<: (+ (join (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) Writes) (+ Reads (join (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) Reads))) (+ (<: Writes (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po))) (:> (join (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) rf) (join (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) Writes)))) (+ (+ (<: (join Writes (join (:> po Syncs) po)) (+ rf (join (:> po Syncs) po))) (<: Writes (<: Writes (join (:> po Syncs) po)))) (:> (+ (join rf (join (:> po Syncs) po)) (<: Reads (join (:> po Syncs) po))) (join Reads (+ rf (join (:> po Syncs) po))))))
       llh?: #f)
[7.17s; 1ms][synth] tested test/ppc/bclwdww019(#t)
[7.17s; 0ms][synth] tested test/ppc/rfe003(#t)
[7.17s; 0ms][synth] tested test/ppc/aclwdrr036(#t)
[7.17s; 0ms][synth] tested test/ppc/bclwdww027(#t)
[7.17s; 1ms][synth] tested test/ppc/podrwposwr000(#t)
[7.18s; 1ms][synth] tested test/ppc/podrwposwr019(#t)
[7.18s; 1ms][synth] tested test/ppc/podwr001(#t)
[7.18s; 1ms][synth] tested test/ppc/podww001(#t)
[7.18s; 0ms][synth] tested test/ppc/posrr002(#f)
[7.18s; 0ms][synth] tested test/ppc/posrr008(#f)
[7.18s; 0ms][synth] tested test/ppc/rfe001(#f)
[7.18s; 1ms][synth] tested test/ppc/rfe004(#t)
[7.18s; 0ms][synth] tested test/ppc/rfe005(#t)
[7.18s; 0ms][synth] tested test/ppc/rfe006(#t)
[7.18s; 0ms][synth] tested test/ppc/rfi000(#t)
[7.18s; 0ms][synth] tested test/ppc/rfi001(#t)
[7.18s; 1ms][synth] tested test/ppc/rfi002(#t)
[7.18s; 1ms][synth] tested test/ppc/safe135(#f)
[7.18s; 0ms][synth] tested test/ppc/safe158(#f)
[7.18s; 0ms][synth] tested test/ppc/safe199(#f)
[7.18s; 0ms][synth] tested test/ppc/safe358(#f)
[7.18s; 0ms][synth] tested test/ppc/safe414(#f)
[7.18s; 0ms][synth] tested test/ppc/safe460(#f)
[7.18s; 0ms][synth] tested test/ppc/safe522(#f)
[7.18s; 0ms][synth] tested test/ppc/safe564(#f)
[7.19s; 1ms][synth] tested test/ppc/aclwdrr002(#t)
[7.19s; 1ms][synth] tested test/ppc/aclwdrr007(#t)
[7.19s; 1ms][synth] tested test/ppc/aclwdrr017(#t)
[7.19s; 1ms][synth] tested test/ppc/aclwsrr007(#f)
[7.19s; 1ms][synth] tested test/ppc/podrwposwr023(#t)
[7.19s; 1ms][synth] tested test/ppc/podrwposwr041(#t)
[7.19s; 1ms][synth] tested test/ppc/posrr000(#f)
[7.19s; 1ms][synth] tested test/ppc/safe053(#f)
[7.19s; 1ms][synth] tested test/ppc/safe092(#f)
[7.19s; 1ms][synth] tested test/ppc/safe143(#f)
[7.19s; 1ms][synth] tested test/ppc/safe180(#f)
[7.19s; 1ms][synth] tested test/ppc/safe225(#f)
[7.19s; 1ms][synth] tested test/ppc/safe282(#f)
[7.19s; 1ms][synth] tested test/ppc/safe388(#f)
[7.19s; 1ms][synth] tested test/ppc/safe544(#f)
[7.19s; 1ms][synth] tested test/ppc/aclwdrr010(#t)
[7.2s; 1ms][synth] tested test/ppc/aclwsrr000(#t)
[7.2s; 1ms][synth] tested test/ppc/bclwdww007(#t)
[7.2s; 1ms][synth] tested test/ppc/bclwdww009(#t)
[7.2s; 1ms][synth] tested test/ppc/bclwdww010(#f)
[7.2s; 1ms][synth] tested test/ppc/lwswr002(#t)
[7.2s; 1ms][synth] tested test/ppc/podrr003(#t)
[7.2s; 1ms][synth] tested test/ppc/podrr006(#t)
[7.2s; 1ms][synth] tested test/ppc/podrr009(#t)
[7.2s; 1ms][synth] tested test/ppc/podrw002(#t)
[7.2s; 1ms][synth] tested test/ppc/posrr010(#f)
[7.2s; 1ms][synth] tested test/ppc/safe001(#f)
[7.2s; 1ms][synth] tested test/ppc/safe006(#f)
[7.2s; 0ms][synth] found next test
[7.81s; 611ms][synth] interpreted test test/ppc/safe006(#f)
[7.88s; 61ms][synth] found candidate: (memory-model anon
        ppo: (& po (- (& (-> (- MemoryEvent Writes) MemoryEvent) (& po (-> MemoryEvent MemoryEvent))) (- (-> (+ Writes Reads) (+ Writes Reads)) (& po dp))))
        grf: (& rf (& (join loc (~ loc)) (& rf (join proc (~ proc)))))
         ab: (+ (+ (+ (<: (join Reads (join (:> po Syncs) po)) (+ rf (join (:> po Syncs) po))) (+ (join rf (join (:> po Syncs) po)) (<: Reads (join (:> po Syncs) po)))) (+ (<: Writes (<: Writes (join (:> po Syncs) po))) (<: (join Writes (join (:> po Syncs) po)) (<: Writes rf)))) (<: (join (+ (:> rf Reads) (+ rf (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)))) (+ Writes Reads)) (+ (:> (join (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) rf) (join (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) Writes)) (:> (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) (join Writes (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)))))))
       llh?: #f)
[7.88s; 1ms][synth] tested test/ppc/bclwdww019(#t)
[7.88s; 0ms][synth] tested test/ppc/rfe003(#t)
[7.88s; 0ms][synth] tested test/ppc/aclwdrr036(#t)
[7.88s; 0ms][synth] tested test/ppc/bclwdww027(#t)
[7.88s; 0ms][synth] tested test/ppc/podrwposwr000(#t)
[7.88s; 0ms][synth] tested test/ppc/podrwposwr019(#t)
[7.88s; 0ms][synth] tested test/ppc/podwr001(#t)
[7.88s; 1ms][synth] tested test/ppc/podww001(#t)
[7.88s; 0ms][synth] tested test/ppc/posrr002(#f)
[7.89s; 2ms][synth] tested test/ppc/posrr008(#f)
[7.89s; 0ms][synth] tested test/ppc/rfe001(#f)
[7.89s; 1ms][synth] tested test/ppc/rfe004(#t)
[7.89s; 1ms][synth] tested test/ppc/rfe005(#t)
[7.89s; 0ms][synth] tested test/ppc/rfe006(#t)
[7.89s; 0ms][synth] tested test/ppc/rfi000(#t)
[7.89s; 0ms][synth] found next test
[8.32s; 428ms][synth] interpreted test test/ppc/rfi000(#t)
[8.37s; 49ms][synth] found candidate: (memory-model anon
        ppo: (& po (- (& (-> (- MemoryEvent Writes) MemoryEvent) (& po (-> MemoryEvent MemoryEvent))) (- (-> (+ Writes Reads) (+ Writes Reads)) (& po dp))))
        grf: (-> none none)
         ab: (+ (+ (+ (<: (join Reads (join (:> po Syncs) po)) (+ rf (join (:> po Syncs) po))) (+ (join rf (join (:> po Syncs) po)) (<: Reads (join (:> po Syncs) po)))) (+ (<: Writes (<: Writes (join (:> po Syncs) po))) (<: (join Writes (join (:> po Syncs) po)) (<: Writes rf)))) (<: (join (+ (:> rf Reads) (+ rf (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)))) (+ Writes Reads)) (+ (:> (join (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) rf) (join (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) Writes)) (:> (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) (join Writes (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)))))))
       llh?: #f)
[8.37s; 1ms][synth] tested test/ppc/bclwdww019(#t)
[8.37s; 0ms][synth] tested test/ppc/rfe003(#t)
[8.37s; 0ms][synth] tested test/ppc/aclwdrr036(#t)
[8.37s; 1ms][synth] tested test/ppc/bclwdww027(#t)
[8.37s; 1ms][synth] tested test/ppc/podrwposwr000(#t)
[8.37s; 0ms][synth] tested test/ppc/podrwposwr019(#t)
[8.37s; 0ms][synth] tested test/ppc/podwr001(#t)
[8.37s; 1ms][synth] tested test/ppc/podww001(#t)
[8.38s; 0ms][synth] tested test/ppc/posrr002(#f)
[8.38s; 0ms][synth] tested test/ppc/posrr008(#f)
[8.38s; 0ms][synth] tested test/ppc/rfe001(#f)
[8.38s; 1ms][synth] tested test/ppc/rfe004(#t)
[8.38s; 0ms][synth] tested test/ppc/rfe005(#t)
[8.38s; 0ms][synth] tested test/ppc/rfe006(#t)
[8.38s; 1ms][synth] tested test/ppc/rfi001(#t)
[8.38s; 1ms][synth] tested test/ppc/rfi002(#t)
[8.38s; 1ms][synth] tested test/ppc/safe135(#f)
[8.38s; 0ms][synth] tested test/ppc/safe158(#f)
[8.38s; 0ms][synth] tested test/ppc/safe199(#f)
[8.38s; 0ms][synth] tested test/ppc/safe358(#f)
[8.38s; 0ms][synth] tested test/ppc/safe414(#f)
[8.38s; 0ms][synth] tested test/ppc/safe460(#f)
[8.38s; 0ms][synth] tested test/ppc/safe522(#f)
[8.38s; 0ms][synth] tested test/ppc/safe564(#f)
[8.38s; 1ms][synth] tested test/ppc/aclwdrr002(#t)
[8.38s; 1ms][synth] tested test/ppc/aclwdrr007(#t)
[8.38s; 0ms][synth] tested test/ppc/aclwdrr017(#t)
[8.38s; 1ms][synth] tested test/ppc/aclwsrr007(#f)
[8.39s; 1ms][synth] tested test/ppc/podrwposwr023(#t)
[8.39s; 1ms][synth] tested test/ppc/podrwposwr041(#t)
[8.39s; 1ms][synth] tested test/ppc/posrr000(#f)
[8.39s; 1ms][synth] tested test/ppc/safe053(#f)
[8.39s; 1ms][synth] tested test/ppc/safe092(#f)
[8.39s; 1ms][synth] tested test/ppc/safe143(#f)
[8.39s; 1ms][synth] tested test/ppc/safe180(#f)
[8.39s; 1ms][synth] tested test/ppc/safe225(#f)
[8.39s; 1ms][synth] tested test/ppc/safe282(#f)
[8.39s; 1ms][synth] tested test/ppc/safe388(#f)
[8.39s; 0ms][synth] tested test/ppc/safe544(#f)
[8.39s; 1ms][synth] tested test/ppc/aclwdrr010(#t)
[8.39s; 1ms][synth] tested test/ppc/aclwsrr000(#t)
[8.39s; 1ms][synth] tested test/ppc/bclwdww007(#t)
[8.39s; 1ms][synth] tested test/ppc/bclwdww009(#t)
[8.39s; 1ms][synth] tested test/ppc/bclwdww010(#f)
[8.4s; 1ms][synth] tested test/ppc/lwswr002(#t)
[8.4s; 1ms][synth] tested test/ppc/podrr003(#t)
[8.4s; 1ms][synth] tested test/ppc/podrr006(#t)
[8.4s; 1ms][synth] tested test/ppc/podrr009(#t)
[8.4s; 1ms][synth] tested test/ppc/podrw002(#t)
[8.4s; 1ms][synth] tested test/ppc/posrr010(#f)
[8.4s; 1ms][synth] tested test/ppc/safe001(#f)
[8.4s; 1ms][synth] tested test/ppc/safe013(#f)
[8.4s; 1ms][synth] tested test/ppc/safe015(#f)
[8.4s; 1ms][synth] tested test/ppc/safe021(#f)
[8.4s; 1ms][synth] tested test/ppc/safe031(#f)
[8.4s; 1ms][synth] tested test/ppc/safe065(#f)
[8.4s; 1ms][synth] tested test/ppc/safe067(#f)
[8.4s; 1ms][synth] tested test/ppc/safe154(#f)
[8.4s; 1ms][synth] tested test/ppc/safe156(#f)
[8.41s; 1ms][synth] tested test/ppc/safe218(#f)
[8.41s; 1ms][synth] tested test/ppc/safe233(#f)
[8.41s; 1ms][synth] tested test/ppc/safe242(#f)
[8.41s; 1ms][synth] tested test/ppc/safe245(#f)
[8.41s; 1ms][synth] tested test/ppc/safe307(#f)
[8.41s; 1ms][synth] tested test/ppc/safe315(#f)
[8.41s; 1ms][synth] tested test/ppc/safe323(#f)
[8.41s; 1ms][synth] tested test/ppc/safe326(#f)
[8.41s; 1ms][synth] tested test/ppc/safe336(#f)
[8.41s; 1ms][synth] tested test/ppc/safe339(#f)
[8.41s; 1ms][synth] tested test/ppc/safe345(#f)
[8.41s; 1ms][synth] tested test/ppc/safe355(#f)
[8.41s; 1ms][synth] tested test/ppc/safe485(#f)
[8.41s; 1ms][synth] tested test/ppc/safe503(#f)
[8.41s; 1ms][synth] tested test/ppc/safe514(#f)
[8.42s; 1ms][synth] tested test/ppc/safe516(#f)
[8.42s; 1ms][synth] tested test/ppc/safe519(#f)
[8.42s; 1ms][synth] tested test/ppc/aclwdrr021(#f)
[8.42s; 1ms][synth] tested test/ppc/aclwdrr022(#f)
[8.42s; 1ms][synth] tested test/ppc/aclwdrr028(#f)
[8.42s; 1ms][synth] tested test/ppc/aclwdrr029(#f)
[8.42s; 1ms][synth] tested test/ppc/aclwdrr033(#f)
[8.42s; 1ms][synth] tested test/ppc/aclwdrr034(#t)
[8.42s; 1ms][synth] tested test/ppc/aclwdrr035(#t)
[8.42s; 1ms][synth] tested test/ppc/aclwdrr039(#t)
[8.42s; 1ms][synth] tested test/ppc/aclwdrr040(#t)
[8.42s; 1ms][synth] tested test/ppc/aclwdrr042(#t)
[8.42s; 1ms][synth] tested test/ppc/aclwsrr004(#f)
[8.42s; 1ms][synth] tested test/ppc/bclwdww008(#f)
[8.43s; 1ms][synth] tested test/ppc/bclwdww011(#t)
[8.43s; 1ms][synth] tested test/ppc/bclwdww012(#f)
[8.43s; 1ms][synth] tested test/ppc/podrwposwr005(#t)
[8.43s; 1ms][synth] tested test/ppc/podrwposwr011(#t)
[8.43s; 1ms][synth] tested test/ppc/podrwposwr015(#t)
[8.43s; 1ms][synth] tested test/ppc/podrwposwr029(#t)
[8.43s; 1ms][synth] tested test/ppc/podrwposwr046(#t)
[8.43s; 1ms][synth] tested test/ppc/podrwposwr058(#t)
[8.43s; 1ms][synth] tested test/ppc/posrr004(#f)
[8.43s; 1ms][synth] tested test/ppc/posrr011(#f)
[8.43s; 1ms][synth] tested test/ppc/safe004(#f)
[8.43s; 1ms][synth] tested test/ppc/safe017(#f)
[8.43s; 1ms][synth] tested test/ppc/safe027(#f)
[8.44s; 1ms][synth] tested test/ppc/safe037(#f)
[8.44s; 1ms][synth] tested test/ppc/safe038(#f)
[8.44s; 1ms][synth] tested test/ppc/safe040(#f)
[8.44s; 1ms][synth] tested test/ppc/safe043(#f)
[8.44s; 1ms][synth] tested test/ppc/safe046(#f)
[8.44s; 1ms][synth] tested test/ppc/safe048(#f)
[8.44s; 1ms][synth] tested test/ppc/safe051(#f)
[8.44s; 1ms][synth] tested test/ppc/safe058(#f)
[8.44s; 1ms][synth] tested test/ppc/safe070(#f)
[8.44s; 1ms][synth] tested test/ppc/safe072(#f)
[8.44s; 1ms][synth] tested test/ppc/safe075(#f)
[8.44s; 1ms][synth] tested test/ppc/safe077(#f)
[8.44s; 1ms][synth] tested test/ppc/safe079(#f)
[8.45s; 1ms][synth] tested test/ppc/safe082(#f)
[8.45s; 1ms][synth] tested test/ppc/safe084(#f)
[8.45s; 1ms][synth] tested test/ppc/safe088(#f)
[8.45s; 1ms][synth] tested test/ppc/safe097(#f)
[8.45s; 1ms][synth] tested test/ppc/safe104(#f)
[8.45s; 1ms][synth] tested test/ppc/safe109(#f)
[8.45s; 1ms][synth] tested test/ppc/safe115(#f)
[8.45s; 1ms][synth] tested test/ppc/safe121(#f)
[8.45s; 1ms][synth] tested test/ppc/safe131(#f)
[8.45s; 1ms][synth] tested test/ppc/safe136(#f)
[8.45s; 1ms][synth] tested test/ppc/safe138(#f)
[8.45s; 1ms][synth] tested test/ppc/safe141(#f)
[8.45s; 1ms][synth] tested test/ppc/safe147(#f)
[8.46s; 1ms][synth] tested test/ppc/safe160(#f)
[8.46s; 1ms][synth] tested test/ppc/safe163(#f)
[8.46s; 1ms][synth] tested test/ppc/safe165(#f)
[8.46s; 1ms][synth] tested test/ppc/safe167(#f)
[8.46s; 1ms][synth] tested test/ppc/safe170(#f)
[8.46s; 1ms][synth] tested test/ppc/safe172(#f)
[8.46s; 1ms][synth] tested test/ppc/safe176(#f)
[8.46s; 1ms][synth] tested test/ppc/safe184(#f)
[8.46s; 2ms][synth] tested test/ppc/safe191(#f)
[8.46s; 1ms][synth] tested test/ppc/safe196(#f)
[8.46s; 1ms][synth] tested test/ppc/safe205(#f)
[8.46s; 1ms][synth] tested test/ppc/safe215(#f)
[8.47s; 1ms][synth] tested test/ppc/safe221(#f)
[8.47s; 1ms][synth] tested test/ppc/safe223(#f)
[8.47s; 1ms][synth] tested test/ppc/safe224(#f)
[8.47s; 1ms][synth] tested test/ppc/safe236(#f)
[8.47s; 1ms][synth] tested test/ppc/safe238(#f)
[8.47s; 1ms][synth] tested test/ppc/safe252(#f)
[8.47s; 1ms][synth] tested test/ppc/safe262(#f)
[8.47s; 1ms][synth] tested test/ppc/safe266(#f)
[8.47s; 1ms][synth] tested test/ppc/safe271(#f)
[8.47s; 1ms][synth] tested test/ppc/safe277(#f)
[8.47s; 1ms][synth] tested test/ppc/safe289(#f)
[8.47s; 1ms][synth] tested test/ppc/safe297(#f)
[8.48s; 1ms][synth] tested test/ppc/safe301(#f)
[8.48s; 1ms][synth] tested test/ppc/safe312(#f)
[8.48s; 1ms][synth] tested test/ppc/safe331(#f)
[8.48s; 1ms][synth] tested test/ppc/safe333(#f)
[8.48s; 1ms][synth] tested test/ppc/safe351(#f)
[8.48s; 1ms][synth] tested test/ppc/safe359(#f)
[8.48s; 1ms][synth] tested test/ppc/safe360(#f)
[8.48s; 1ms][synth] tested test/ppc/safe363(#f)
[8.48s; 1ms][synth] tested test/ppc/safe365(#f)
[8.48s; 1ms][synth] tested test/ppc/safe369(#f)
[8.48s; 1ms][synth] tested test/ppc/safe372(#f)
[8.48s; 1ms][synth] tested test/ppc/safe374(#f)
[8.48s; 1ms][synth] tested test/ppc/safe377(#f)
[8.48s; 1ms][synth] tested test/ppc/safe382(#f)
[8.49s; 1ms][synth] tested test/ppc/safe393(#f)
[8.49s; 1ms][synth] tested test/ppc/safe396(#f)
[8.49s; 1ms][synth] tested test/ppc/safe410(#f)
[8.49s; 1ms][synth] tested test/ppc/safe416(#f)
[8.49s; 1ms][synth] tested test/ppc/safe426(#f)
[8.49s; 1ms][synth] tested test/ppc/safe428(#f)
[8.49s; 1ms][synth] tested test/ppc/safe433(#f)
[8.49s; 1ms][synth] tested test/ppc/safe437(#f)
[8.49s; 1ms][synth] tested test/ppc/safe450(#f)
[8.49s; 1ms][synth] tested test/ppc/safe457(#f)
[8.49s; 1ms][synth] tested test/ppc/safe468(#f)
[8.49s; 1ms][synth] tested test/ppc/safe470(#f)
[8.49s; 1ms][synth] tested test/ppc/safe478(#f)
[8.49s; 1ms][synth] tested test/ppc/safe482(#f)
[8.5s; 1ms][synth] tested test/ppc/safe491(#f)
[8.5s; 1ms][synth] tested test/ppc/safe497(#f)
[8.5s; 1ms][synth] tested test/ppc/safe506(#f)
[8.5s; 1ms][synth] tested test/ppc/safe508(#f)
[8.5s; 1ms][synth] tested test/ppc/safe511(#f)
[8.5s; 1ms][synth] tested test/ppc/safe525(#f)
[8.5s; 1ms][synth] tested test/ppc/safe527(#f)
[8.5s; 1ms][synth] tested test/ppc/safe531(#f)
[8.5s; 1ms][synth] tested test/ppc/safe538(#f)
[8.5s; 1ms][synth] tested test/ppc/safe551(#f)
[8.5s; 1ms][synth] tested test/ppc/safe554(#f)
[8.5s; 1ms][synth] tested test/ppc/safe562(#f)
[8.5s; 1ms][synth] tested test/ppc/safe565(#f)
[8.5s; 1ms][synth] tested test/ppc/aclwdrr000(#t)
[8.51s; 1ms][synth] tested test/ppc/aclwdrr001(#t)
[8.51s; 1ms][synth] tested test/ppc/aclwdrr003(#t)
[8.51s; 1ms][synth] tested test/ppc/aclwdrr004(#t)
[8.51s; 1ms][synth] tested test/ppc/aclwdrr005(#t)
[8.51s; 1ms][synth] tested test/ppc/aclwdrr006(#t)
[8.51s; 1ms][synth] tested test/ppc/aclwdrr008(#t)
[8.51s; 1ms][synth] tested test/ppc/aclwdrr009(#t)
[8.51s; 1ms][synth] tested test/ppc/aclwdrr011(#t)
[8.51s; 1ms][synth] tested test/ppc/aclwdrr012(#t)
[8.51s; 1ms][synth] tested test/ppc/aclwdrr013(#t)
[8.51s; 1ms][synth] tested test/ppc/aclwdrr014(#t)
[8.51s; 1ms][synth] tested test/ppc/aclwdrr015(#t)
[8.52s; 1ms][synth] tested test/ppc/aclwdrr016(#t)
[8.52s; 1ms][synth] tested test/ppc/aclwdrr018(#t)
[8.52s; 1ms][synth] tested test/ppc/aclwdrr019(#t)
[8.52s; 1ms][synth] tested test/ppc/aclwdrr020(#t)
[8.52s; 1ms][synth] tested test/ppc/aclwsrr002(#t)
[8.52s; 1ms][synth] tested test/ppc/aclwsrr005(#f)
[8.52s; 1ms][synth] tested test/ppc/bclwdww001(#t)
[8.52s; 1ms][synth] tested test/ppc/bclwdww003(#t)
[8.52s; 1ms][synth] tested test/ppc/bclwdww004(#t)
[8.52s; 1ms][synth] tested test/ppc/bclwdww020(#t)
[8.52s; 1ms][synth] tested test/ppc/bclwdww021(#t)
[8.52s; 1ms][synth] tested test/ppc/bclwdww024(#f)
[8.53s; 1ms][synth] tested test/ppc/bclwsww000(#t)
[8.53s; 1ms][synth] tested test/ppc/podrr001(#t)
[8.53s; 1ms][synth] tested test/ppc/podrr002(#t)
[8.53s; 1ms][synth] tested test/ppc/podrr008(#t)
[8.53s; 1ms][synth] tested test/ppc/podrw001(#t)
[8.53s; 1ms][synth] tested test/ppc/podrwposwr030(#t)
[8.53s; 1ms][synth] tested test/ppc/podrwposwr034(#t)
[8.53s; 1ms][synth] tested test/ppc/podrwposwr047(#t)
[8.53s; 1ms][synth] tested test/ppc/podrwposwr051(#t)
[8.53s; 1ms][synth] tested test/ppc/podrwposwr059(#t)
[8.53s; 1ms][synth] tested test/ppc/podrwposwr063(#t)
[8.53s; 1ms][synth] tested test/ppc/posrr001(#f)
[8.54s; 1ms][synth] tested test/ppc/posrr007(#f)
[8.54s; 1ms][synth] tested test/ppc/posrr009(#f)
[8.54s; 1ms][synth] tested test/ppc/safe000(#f)
[8.54s; 1ms][synth] tested test/ppc/safe012(#f)
[8.54s; 1ms][synth] tested test/ppc/safe019(#f)
[8.54s; 1ms][synth] tested test/ppc/safe020(#f)
[8.54s; 1ms][synth] tested test/ppc/safe039(#f)
[8.54s; 1ms][synth] tested test/ppc/safe041(#f)
[8.54s; 1ms][synth] tested test/ppc/safe047(#f)
[8.54s; 1ms][synth] tested test/ppc/safe049(#f)
[8.54s; 1ms][synth] tested test/ppc/safe054(#f)
[8.55s; 1ms][synth] tested test/ppc/safe055(#f)
[8.55s; 1ms][synth] tested test/ppc/safe062(#f)
[8.55s; 1ms][synth] tested test/ppc/safe071(#f)
[8.55s; 1ms][synth] tested test/ppc/safe073(#f)
[8.55s; 1ms][synth] tested test/ppc/safe078(#f)
[8.55s; 1ms][synth] tested test/ppc/safe086(#f)
[8.55s; 1ms][synth] tested test/ppc/safe090(#f)
[8.55s; 1ms][synth] tested test/ppc/safe093(#f)
[8.55s; 1ms][synth] tested test/ppc/safe094(#f)
[8.55s; 1ms][synth] tested test/ppc/safe101(#f)
[8.55s; 1ms][synth] tested test/ppc/safe107(#f)
[8.55s; 1ms][synth] tested test/ppc/safe117(#f)
[8.56s; 1ms][synth] tested test/ppc/safe127(#f)
[8.56s; 1ms][synth] tested test/ppc/safe137(#f)
[8.56s; 1ms][synth] tested test/ppc/safe139(#f)
[8.56s; 1ms][synth] tested test/ppc/safe144(#f)
[8.56s; 1ms][synth] tested test/ppc/safe151(#f)
[8.56s; 1ms][synth] tested test/ppc/safe159(#f)
[8.56s; 1ms][synth] tested test/ppc/safe161(#f)
[8.56s; 1ms][synth] tested test/ppc/safe166(#f)
[8.56s; 1ms][synth] tested test/ppc/safe174(#f)
[8.56s; 1ms][synth] tested test/ppc/safe178(#f)
[8.56s; 1ms][synth] tested test/ppc/safe181(#f)
[8.57s; 1ms][synth] tested test/ppc/safe188(#f)
[8.57s; 1ms][synth] tested test/ppc/safe194(#f)
[8.57s; 1ms][synth] tested test/ppc/safe201(#f)
[8.57s; 1ms][synth] tested test/ppc/safe211(#f)
[8.57s; 1ms][synth] tested test/ppc/safe219(#f)
[8.57s; 1ms][synth] tested test/ppc/safe226(#f)
[8.57s; 1ms][synth] tested test/ppc/safe227(#f)
[8.57s; 1ms][synth] tested test/ppc/safe228(#f)
[8.57s; 1ms][synth] tested test/ppc/safe229(#f)
[8.57s; 1ms][synth] tested test/ppc/safe230(#f)
[8.57s; 1ms][synth] tested test/ppc/safe231(#f)
[8.57s; 1ms][synth] tested test/ppc/safe232(#f)
[8.58s; 1ms][synth] tested test/ppc/safe234(#f)
[8.58s; 1ms][synth] tested test/ppc/safe258(#f)
[8.58s; 1ms][synth] tested test/ppc/safe269(#f)
[8.58s; 1ms][synth] tested test/ppc/safe274(#f)
[8.58s; 1ms][synth] tested test/ppc/safe280(#f)
[8.58s; 1ms][synth] tested test/ppc/safe284(#f)
[8.58s; 1ms][synth] tested test/ppc/safe295(#f)
[8.58s; 1ms][synth] tested test/ppc/safe305(#f)
[8.58s; 1ms][synth] tested test/ppc/safe306(#f)
[8.58s; 1ms][synth] tested test/ppc/safe321(#f)
[8.58s; 1ms][synth] tested test/ppc/safe322(#f)
[8.58s; 1ms][synth] tested test/ppc/safe344(#f)
[8.59s; 1ms][synth] tested test/ppc/safe361(#f)
[8.59s; 1ms][synth] tested test/ppc/safe362(#f)
[8.59s; 1ms][synth] tested test/ppc/safe368(#f)
[8.59s; 1ms][synth] tested test/ppc/safe385(#f)
[8.59s; 1ms][synth] tested test/ppc/safe389(#f)
[8.59s; 1ms][synth] tested test/ppc/safe398(#f)
[8.59s; 1ms][synth] tested test/ppc/safe400(#f)
[8.59s; 1ms][synth] tested test/ppc/safe407(#f)
[8.59s; 1ms][synth] tested test/ppc/safe421(#f)
[8.59s; 1ms][synth] tested test/ppc/safe423(#f)
[8.59s; 1ms][synth] tested test/ppc/safe441(#f)
[8.59s; 1ms][synth] tested test/ppc/safe447(#f)
[8.6s; 1ms][synth] tested test/ppc/safe454(#f)
[8.6s; 1ms][synth] tested test/ppc/safe463(#f)
[8.6s; 1ms][synth] tested test/ppc/safe465(#f)
[8.6s; 1ms][synth] tested test/ppc/safe475(#f)
[8.6s; 1ms][synth] tested test/ppc/safe480(#f)
[8.6s; 1ms][synth] tested test/ppc/safe488(#f)
[8.6s; 1ms][synth] tested test/ppc/safe501(#f)
[8.6s; 1ms][synth] tested test/ppc/safe504(#f)
[8.6s; 1ms][synth] tested test/ppc/safe505(#f)
[8.6s; 1ms][synth] tested test/ppc/safe541(#f)
[8.6s; 1ms][synth] tested test/ppc/safe556(#f)
[8.6s; 1ms][synth] tested test/ppc/safe558(#f)
[8.61s; 1ms][synth] tested test/ppc/aclwsrr001(#t)
[8.61s; 1ms][synth] tested test/ppc/aclwsrr003(#f)
[8.61s; 1ms][synth] tested test/ppc/bclwdww002(#t)
[8.61s; 1ms][synth] tested test/ppc/bclwdww005(#t)
[8.61s; 1ms][synth] tested test/ppc/bclwdww006(#t)
[8.61s; 1ms][synth] tested test/ppc/bclwdww015(#t)
[8.61s; 1ms][synth] tested test/ppc/bclwdww016(#f)
[8.61s; 1ms][synth] tested test/ppc/bclwdww022(#t)
[8.61s; 1ms][synth] tested test/ppc/bclwdww023(#t)
[8.61s; 1ms][synth] tested test/ppc/bclwdww025(#t)
[8.62s; 1ms][synth] tested test/ppc/bclwdww026(#f)
[8.62s; 1ms][synth] tested test/ppc/lwswr001(#t)
[8.62s; 1ms][synth] tested test/ppc/podrr004(#t)
[8.62s; 1ms][synth] tested test/ppc/podrr005(#t)
[8.62s; 1ms][synth] tested test/ppc/podrr007(#t)
[8.62s; 1ms][synth] tested test/ppc/podrr010(#t)
[8.62s; 1ms][synth] tested test/ppc/podrr011(#t)
[8.62s; 1ms][synth] tested test/ppc/podrw003(#t)
[8.62s; 1ms][synth] tested test/ppc/podrwposwr004(#t)
[8.62s; 1ms][synth] tested test/ppc/podrwposwr010(#t)
[8.63s; 1ms][synth] tested test/ppc/podrwposwr026(#t)
[8.63s; 1ms][synth] tested test/ppc/podrwposwr043(#t)
[8.63s; 1ms][synth] tested test/ppc/posrr012(#f)
[8.63s; 1ms][synth] tested test/ppc/safe002(#f)
[8.63s; 1ms][synth] tested test/ppc/safe003(#f)
[8.63s; 1ms][synth] tested test/ppc/safe005(#f)
[8.63s; 1ms][synth] tested test/ppc/safe007(#f)
[8.63s; 1ms][synth] tested test/ppc/safe008(#f)
[8.63s; 1ms][synth] tested test/ppc/safe009(#f)
[8.63s; 1ms][synth] tested test/ppc/safe010(#f)
[8.64s; 1ms][synth] tested test/ppc/safe014(#f)
[8.64s; 1ms][synth] tested test/ppc/safe016(#f)
[8.64s; 1ms][synth] tested test/ppc/safe018(#f)
[8.64s; 1ms][synth] tested test/ppc/safe022(#f)
[8.64s; 1ms][synth] tested test/ppc/safe023(#f)
[8.64s; 1ms][synth] tested test/ppc/safe024(#f)
[8.64s; 1ms][synth] tested test/ppc/safe025(#f)
[8.64s; 1ms][synth] tested test/ppc/safe026(#f)
[8.64s; 1ms][synth] tested test/ppc/safe028(#f)
[8.64s; 1ms][synth] tested test/ppc/safe029(#f)
[8.65s; 1ms][synth] tested test/ppc/safe030(#f)
[8.65s; 1ms][synth] tested test/ppc/safe032(#f)
[8.65s; 1ms][synth] tested test/ppc/safe033(#f)
[8.65s; 1ms][synth] tested test/ppc/safe034(#f)
[8.65s; 1ms][synth] tested test/ppc/safe035(#f)
[8.65s; 1ms][synth] tested test/ppc/safe056(#f)
[8.65s; 1ms][synth] tested test/ppc/safe057(#f)
[8.65s; 1ms][synth] tested test/ppc/safe064(#f)
[8.65s; 1ms][synth] tested test/ppc/safe066(#f)
[8.65s; 1ms][synth] tested test/ppc/safe068(#f)
[8.66s; 1ms][synth] tested test/ppc/safe087(#f)
[8.66s; 1ms][synth] tested test/ppc/safe095(#f)
[8.66s; 1ms][synth] tested test/ppc/safe096(#f)
[8.66s; 1ms][synth] tested test/ppc/safe103(#f)
[8.66s; 1ms][synth] tested test/ppc/safe119(#f)
[8.66s; 1ms][synth] tested test/ppc/safe120(#f)
[8.66s; 1ms][synth] tested test/ppc/safe145(#f)
[8.66s; 1ms][synth] tested test/ppc/safe146(#f)
[8.66s; 1ms][synth] tested test/ppc/safe153(#f)
[8.66s; 1ms][synth] tested test/ppc/safe155(#f)
[8.67s; 1ms][synth] tested test/ppc/safe157(#f)
[8.67s; 1ms][synth] tested test/ppc/safe175(#f)
[8.67s; 1ms][synth] tested test/ppc/safe182(#f)
[8.67s; 1ms][synth] tested test/ppc/safe183(#f)
[8.67s; 1ms][synth] tested test/ppc/safe190(#f)
[8.67s; 1ms][synth] tested test/ppc/safe203(#f)
[8.67s; 1ms][synth] tested test/ppc/safe204(#f)
[8.67s; 1ms][synth] tested test/ppc/safe240(#f)
[8.67s; 1ms][synth] tested test/ppc/safe241(#f)
[8.67s; 1ms][synth] tested test/ppc/safe243(#f)
[8.68s; 1ms][synth] tested test/ppc/safe244(#f)
[8.68s; 1ms][synth] tested test/ppc/safe246(#f)
[8.68s; 1ms][synth] tested test/ppc/safe247(#f)
[8.68s; 1ms][synth] tested test/ppc/safe250(#f)
[8.68s; 1ms][synth] tested test/ppc/safe251(#f)
[8.68s; 1ms][synth] tested test/ppc/safe265(#f)
[8.68s; 1ms][synth] tested test/ppc/safe276(#f)
[8.68s; 1ms][synth] tested test/ppc/safe287(#f)
[8.68s; 1ms][synth] tested test/ppc/safe288(#f)
[8.68s; 1ms][synth] tested test/ppc/safe308(#f)
[8.69s; 1ms][synth] tested test/ppc/safe309(#f)
[8.69s; 1ms][synth] tested test/ppc/safe310(#f)
[8.69s; 1ms][synth] tested test/ppc/safe311(#f)
[8.69s; 1ms][synth] tested test/ppc/safe313(#f)
[8.69s; 1ms][synth] tested test/ppc/safe314(#f)
[8.69s; 1ms][synth] tested test/ppc/safe316(#f)
[8.69s; 1ms][synth] tested test/ppc/safe317(#f)
[8.69s; 1ms][synth] tested test/ppc/safe318(#f)
[8.69s; 1ms][synth] tested test/ppc/safe319(#f)
[8.69s; 1ms][synth] tested test/ppc/safe324(#f)
[8.7s; 1ms][synth] tested test/ppc/safe325(#f)
[8.7s; 1ms][synth] tested test/ppc/safe327(#f)
[8.7s; 1ms][synth] tested test/ppc/safe328(#f)
[8.7s; 1ms][synth] tested test/ppc/safe329(#f)
[8.7s; 1ms][synth] tested test/ppc/safe330(#f)
[8.7s; 1ms][synth] tested test/ppc/safe332(#f)
[8.7s; 1ms][synth] tested test/ppc/safe334(#f)
[8.7s; 1ms][synth] tested test/ppc/safe335(#f)
[8.7s; 1ms][synth] tested test/ppc/safe337(#f)
[8.7s; 1ms][synth] tested test/ppc/safe338(#f)
[8.7s; 1ms][synth] tested test/ppc/safe340(#f)
[8.71s; 1ms][synth] tested test/ppc/safe341(#f)
[8.71s; 1ms][synth] tested test/ppc/safe342(#f)
[8.71s; 1ms][synth] tested test/ppc/safe343(#f)
[8.71s; 1ms][synth] tested test/ppc/safe346(#f)
[8.71s; 1ms][synth] tested test/ppc/safe347(#f)
[8.71s; 1ms][synth] tested test/ppc/safe348(#f)
[8.71s; 1ms][synth] tested test/ppc/safe349(#f)
[8.71s; 1ms][synth] tested test/ppc/safe350(#f)
[8.71s; 1ms][synth] tested test/ppc/safe352(#f)
[8.71s; 1ms][synth] tested test/ppc/safe353(#f)
[8.72s; 1ms][synth] tested test/ppc/safe354(#f)
[8.72s; 1ms][synth] tested test/ppc/safe356(#f)
[8.72s; 1ms][synth] tested test/ppc/safe357(#f)
[8.72s; 1ms][synth] tested test/ppc/safe380(#f)
[8.72s; 1ms][synth] tested test/ppc/safe381(#f)
[8.72s; 1ms][synth] tested test/ppc/safe390(#f)
[8.72s; 1ms][synth] tested test/ppc/safe391(#f)
[8.72s; 1ms][synth] tested test/ppc/safe392(#f)
[8.72s; 1ms][synth] tested test/ppc/safe435(#f)
[8.72s; 1ms][synth] tested test/ppc/safe436(#f)
[8.72s; 1ms][synth] tested test/ppc/safe484(#f)
[8.73s; 1ms][synth] tested test/ppc/safe486(#f)
[8.73s; 1ms][synth] tested test/ppc/safe495(#f)
[8.73s; 1ms][synth] tested test/ppc/safe496(#f)
[8.73s; 1ms][synth] tested test/ppc/safe515(#f)
[8.73s; 1ms][synth] tested test/ppc/safe517(#f)
[8.73s; 1ms][synth] tested test/ppc/safe518(#f)
[8.73s; 1ms][synth] tested test/ppc/safe520(#f)
[8.73s; 1ms][synth] tested test/ppc/safe521(#f)
[8.73s; 1ms][synth] tested test/ppc/safe536(#f)
[8.73s; 1ms][synth] tested test/ppc/safe537(#f)
[8.74s; 1ms][synth] tested test/ppc/safe548(#f)
[8.74s; 1ms][synth] tested test/ppc/safe549(#f)
[8.74s; 1ms][synth] tested test/ppc/safe550(#f)
[8.74s; 1ms][synth] tested test/ppc/aclwdrr024(#f)
[8.74s; 1ms][synth] tested test/ppc/aclwdrr025(#f)
[8.74s; 1ms][synth] tested test/ppc/aclwdrr026(#t)
[8.74s; 1ms][synth] tested test/ppc/aclwdrr027(#t)
[8.74s; 1ms][synth] tested test/ppc/aclwdrr030(#f)
[8.74s; 1ms][synth] tested test/ppc/aclwdrr031(#t)
[8.75s; 1ms][synth] tested test/ppc/aclwdrr032(#t)
[8.75s; 1ms][synth] tested test/ppc/aclwdrr037(#t)
[8.75s; 1ms][synth] tested test/ppc/aclwdrr038(#t)
[8.75s; 1ms][synth] tested test/ppc/aclwdrr041(#t)
[8.75s; 1ms][synth] tested test/ppc/aclwsrr006(#f)
[8.75s; 1ms][synth] tested test/ppc/bclwdww014(#f)
[8.75s; 1ms][synth] tested test/ppc/bclwdww017(#t)
[8.75s; 1ms][synth] tested test/ppc/bclwdww018(#f)
[8.75s; 1ms][synth] tested test/ppc/bclwdww028(#t)
[8.75s; 1ms][synth] tested test/ppc/bclwdww029(#t)
[8.76s; 1ms][synth] tested test/ppc/bclwdww030(#f)
[8.76s; 1ms][synth] tested test/ppc/lwswr003(#t)
[8.76s; 1ms][synth] tested test/ppc/podrwposwr001(#t)
[8.76s; 1ms][synth] tested test/ppc/podrwposwr002(#t)
[8.76s; 1ms][synth] tested test/ppc/podrwposwr006(#t)
[8.76s; 1ms][synth] tested test/ppc/podrwposwr007(#t)
[8.76s; 1ms][synth] tested test/ppc/podrwposwr008(#t)
[8.76s; 1ms][synth] tested test/ppc/podrwposwr012(#t)
[8.76s; 1ms][synth] tested test/ppc/podrwposwr013(#t)
[8.77s; 1ms][synth] tested test/ppc/podrwposwr014(#t)
[8.77s; 1ms][synth] tested test/ppc/podrwposwr016(#t)
[8.77s; 1ms][synth] tested test/ppc/podrwposwr017(#t)
[8.77s; 1ms][synth] tested test/ppc/podrwposwr018(#t)
[8.77s; 1ms][synth] tested test/ppc/podrwposwr020(#t)
[8.77s; 1ms][synth] tested test/ppc/podrwposwr027(#t)
[8.77s; 1ms][synth] tested test/ppc/podrwposwr028(#t)
[8.77s; 1ms][synth] tested test/ppc/podrwposwr031(#t)
[8.78s; 1ms][synth] tested test/ppc/podrwposwr035(#t)
[8.78s; 1ms][synth] tested test/ppc/podrwposwr038(#t)
[8.78s; 1ms][synth] tested test/ppc/podrwposwr044(#t)
[8.78s; 1ms][synth] tested test/ppc/podrwposwr045(#t)
[8.78s; 1ms][synth] tested test/ppc/podrwposwr048(#t)
[8.78s; 1ms][synth] tested test/ppc/podrwposwr052(#t)
[8.78s; 1ms][synth] tested test/ppc/podrwposwr055(#t)
[8.78s; 1ms][synth] tested test/ppc/podrwposwr060(#t)
[8.78s; 1ms][synth] tested test/ppc/podrwposwr064(#t)
[8.79s; 1ms][synth] tested test/ppc/podrwposwr067(#t)
[8.79s; 1ms][synth] tested test/ppc/posrr006(#f)
[8.79s; 1ms][synth] tested test/ppc/posrr013(#f)
[8.79s; 1ms][synth] tested test/ppc/safe042(#f)
[8.79s; 1ms][synth] tested test/ppc/safe044(#f)
[8.79s; 1ms][synth] tested test/ppc/safe050(#f)
[8.79s; 1ms][synth] tested test/ppc/safe052(#f)
[8.79s; 1ms][synth] tested test/ppc/safe059(#f)
[8.79s; 1ms][synth] tested test/ppc/safe060(#f)
[8.8s; 1ms][synth] tested test/ppc/safe061(#f)
[8.8s; 1ms][synth] tested test/ppc/safe063(#f)
[8.8s; 1ms][synth] tested test/ppc/safe074(#f)
[8.8s; 1ms][synth] tested test/ppc/safe076(#f)
[8.8s; 1ms][synth] tested test/ppc/safe080(#f)
[8.8s; 1ms][synth] tested test/ppc/safe081(#f)
[8.8s; 1ms][synth] tested test/ppc/safe083(#f)
[8.8s; 1ms][synth] tested test/ppc/safe085(#f)
[8.8s; 1ms][synth] tested test/ppc/safe089(#f)
[8.81s; 1ms][synth] tested test/ppc/safe091(#f)
[8.81s; 1ms][synth] tested test/ppc/safe098(#f)
[8.81s; 1ms][synth] tested test/ppc/safe099(#f)
[8.81s; 1ms][synth] tested test/ppc/safe100(#f)
[8.81s; 1ms][synth] tested test/ppc/safe102(#f)
[8.81s; 1ms][synth] tested test/ppc/safe105(#f)
[8.81s; 1ms][synth] tested test/ppc/safe106(#f)
[8.81s; 1ms][synth] tested test/ppc/safe108(#f)
[8.81s; 1ms][synth] tested test/ppc/safe110(#f)
[8.82s; 1ms][synth] tested test/ppc/safe111(#f)
[8.82s; 1ms][synth] tested test/ppc/safe112(#f)
[8.82s; 1ms][synth] tested test/ppc/safe114(#f)
[8.82s; 1ms][synth] tested test/ppc/safe116(#f)
[8.82s; 1ms][synth] tested test/ppc/safe118(#f)
[8.82s; 1ms][synth] tested test/ppc/safe122(#f)
[8.82s; 1ms][synth] tested test/ppc/safe123(#f)
[8.82s; 1ms][synth] tested test/ppc/safe124(#f)
[8.82s; 1ms][synth] tested test/ppc/safe125(#f)
[8.83s; 1ms][synth] tested test/ppc/safe126(#f)
[8.83s; 1ms][synth] tested test/ppc/safe128(#f)
[8.83s; 1ms][synth] tested test/ppc/safe129(#f)
[8.83s; 1ms][synth] tested test/ppc/safe130(#f)
[8.83s; 1ms][synth] tested test/ppc/safe132(#f)
[8.83s; 1ms][synth] tested test/ppc/safe133(#f)
[8.83s; 1ms][synth] tested test/ppc/safe134(#f)
[8.83s; 1ms][synth] tested test/ppc/safe140(#f)
[8.83s; 1ms][synth] tested test/ppc/safe142(#f)
[8.84s; 1ms][synth] tested test/ppc/safe148(#f)
[8.84s; 1ms][synth] tested test/ppc/safe149(#f)
[8.84s; 1ms][synth] tested test/ppc/safe150(#f)
[8.84s; 1ms][synth] tested test/ppc/safe152(#f)
[8.84s; 1ms][synth] tested test/ppc/safe162(#f)
[8.84s; 1ms][synth] tested test/ppc/safe164(#f)
[8.84s; 1ms][synth] tested test/ppc/safe168(#f)
[8.84s; 1ms][synth] tested test/ppc/safe169(#f)
[8.84s; 1ms][synth] tested test/ppc/safe171(#f)
[8.85s; 1ms][synth] tested test/ppc/safe173(#f)
[8.85s; 1ms][synth] tested test/ppc/safe177(#f)
[8.85s; 1ms][synth] tested test/ppc/safe179(#f)
[8.85s; 1ms][synth] tested test/ppc/safe185(#f)
[8.85s; 1ms][synth] tested test/ppc/safe186(#f)
[8.85s; 1ms][synth] tested test/ppc/safe187(#f)
[8.85s; 1ms][synth] tested test/ppc/safe189(#f)
[8.85s; 1ms][synth] tested test/ppc/safe192(#f)
[8.85s; 1ms][synth] tested test/ppc/safe193(#f)
[8.86s; 1ms][synth] tested test/ppc/safe195(#f)
[8.86s; 1ms][synth] tested test/ppc/safe197(#f)
[8.86s; 1ms][synth] tested test/ppc/safe198(#f)
[8.86s; 1ms][synth] tested test/ppc/safe200(#f)
[8.86s; 1ms][synth] tested test/ppc/safe202(#f)
[8.86s; 1ms][synth] tested test/ppc/safe206(#f)
[8.86s; 1ms][synth] tested test/ppc/safe207(#f)
[8.86s; 1ms][synth] tested test/ppc/safe208(#f)
[8.86s; 1ms][synth] tested test/ppc/safe209(#f)
[8.87s; 1ms][synth] tested test/ppc/safe210(#f)
[8.87s; 1ms][synth] tested test/ppc/safe212(#f)
[8.87s; 1ms][synth] tested test/ppc/safe213(#f)
[8.87s; 1ms][synth] tested test/ppc/safe214(#f)
[8.87s; 1ms][synth] tested test/ppc/safe216(#f)
[8.87s; 1ms][synth] tested test/ppc/safe217(#f)
[8.87s; 1ms][synth] tested test/ppc/safe220(#f)
[8.87s; 1ms][synth] tested test/ppc/safe222(#f)
[8.87s; 1ms][synth] tested test/ppc/safe235(#f)
[8.88s; 1ms][synth] tested test/ppc/safe237(#f)
[8.88s; 1ms][synth] tested test/ppc/safe239(#f)
[8.88s; 1ms][synth] tested test/ppc/safe249(#f)
[8.88s; 1ms][synth] tested test/ppc/safe253(#f)
[8.88s; 1ms][synth] tested test/ppc/safe254(#f)
[8.88s; 1ms][synth] tested test/ppc/safe255(#f)
[8.88s; 1ms][synth] tested test/ppc/safe256(#f)
[8.88s; 1ms][synth] tested test/ppc/safe257(#f)
[8.88s; 1ms][synth] tested test/ppc/safe259(#f)
[8.89s; 1ms][synth] tested test/ppc/safe260(#f)
[8.89s; 1ms][synth] tested test/ppc/safe261(#f)
[8.89s; 1ms][synth] tested test/ppc/safe263(#f)
[8.89s; 1ms][synth] tested test/ppc/safe264(#f)
[8.89s; 1ms][synth] tested test/ppc/safe267(#f)
[8.89s; 1ms][synth] tested test/ppc/safe268(#f)
[8.89s; 1ms][synth] tested test/ppc/safe270(#f)
[8.89s; 1ms][synth] tested test/ppc/safe272(#f)
[8.89s; 1ms][synth] tested test/ppc/safe273(#f)
[8.9s; 1ms][synth] tested test/ppc/safe275(#f)
[8.9s; 1ms][synth] tested test/ppc/safe278(#f)
[8.9s; 1ms][synth] tested test/ppc/safe279(#f)
[8.9s; 1ms][synth] tested test/ppc/safe281(#f)
[8.9s; 1ms][synth] tested test/ppc/safe283(#f)
[8.9s; 1ms][synth] tested test/ppc/safe285(#f)
[8.9s; 1ms][synth] tested test/ppc/safe286(#f)
[8.9s; 1ms][synth] tested test/ppc/safe290(#f)
[8.91s; 1ms][synth] tested test/ppc/safe291(#f)
[8.91s; 1ms][synth] tested test/ppc/safe292(#f)
[8.91s; 1ms][synth] tested test/ppc/safe293(#f)
[8.91s; 1ms][synth] tested test/ppc/safe294(#f)
[8.91s; 1ms][synth] tested test/ppc/safe296(#f)
[8.91s; 1ms][synth] tested test/ppc/safe298(#f)
[8.91s; 1ms][synth] tested test/ppc/safe299(#f)
[8.91s; 1ms][synth] tested test/ppc/safe300(#f)
[8.91s; 1ms][synth] tested test/ppc/safe302(#f)
[8.92s; 1ms][synth] tested test/ppc/safe303(#f)
[8.92s; 1ms][synth] tested test/ppc/safe304(#f)
[8.92s; 1ms][synth] tested test/ppc/safe364(#f)
[8.92s; 1ms][synth] tested test/ppc/safe366(#f)
[8.92s; 1ms][synth] tested test/ppc/safe367(#f)
[8.92s; 1ms][synth] tested test/ppc/safe370(#f)
[8.92s; 1ms][synth] tested test/ppc/safe371(#f)
[8.92s; 1ms][synth] tested test/ppc/safe373(#f)
[8.92s; 1ms][synth] tested test/ppc/safe375(#f)
[8.92s; 1ms][synth] tested test/ppc/safe376(#f)
[8.93s; 1ms][synth] tested test/ppc/safe378(#f)
[8.93s; 1ms][synth] tested test/ppc/safe379(#f)
[8.93s; 1ms][synth] tested test/ppc/safe383(#f)
[8.93s; 1ms][synth] tested test/ppc/safe384(#f)
[8.93s; 1ms][synth] tested test/ppc/safe386(#f)
[8.93s; 1ms][synth] tested test/ppc/safe387(#f)
[8.93s; 1ms][synth] tested test/ppc/safe394(#f)
[8.93s; 1ms][synth] tested test/ppc/safe395(#f)
[8.93s; 1ms][synth] tested test/ppc/safe397(#f)
[8.94s; 1ms][synth] tested test/ppc/safe399(#f)
[8.94s; 1ms][synth] tested test/ppc/safe401(#f)
[8.94s; 1ms][synth] tested test/ppc/safe402(#f)
[8.94s; 1ms][synth] tested test/ppc/safe403(#f)
[8.94s; 1ms][synth] tested test/ppc/safe404(#f)
[8.94s; 1ms][synth] tested test/ppc/safe405(#f)
[8.94s; 1ms][synth] tested test/ppc/safe406(#f)
[8.94s; 1ms][synth] tested test/ppc/safe408(#f)
[8.94s; 1ms][synth] tested test/ppc/safe409(#f)
[8.95s; 1ms][synth] tested test/ppc/safe411(#f)
[8.95s; 1ms][synth] tested test/ppc/safe412(#f)
[8.95s; 1ms][synth] tested test/ppc/safe413(#f)
[8.95s; 1ms][synth] tested test/ppc/safe415(#f)
[8.95s; 1ms][synth] tested test/ppc/safe417(#f)
[8.95s; 1ms][synth] tested test/ppc/safe418(#f)
[8.95s; 1ms][synth] tested test/ppc/safe419(#f)
[8.95s; 1ms][synth] tested test/ppc/safe420(#f)
[8.95s; 1ms][synth] tested test/ppc/safe422(#f)
[8.95s; 1ms][synth] tested test/ppc/safe424(#f)
[8.96s; 1ms][synth] tested test/ppc/safe425(#f)
[8.96s; 1ms][synth] tested test/ppc/safe427(#f)
[8.96s; 1ms][synth] tested test/ppc/safe429(#f)
[8.96s; 1ms][synth] tested test/ppc/safe430(#f)
[8.96s; 1ms][synth] tested test/ppc/safe431(#f)
[8.96s; 1ms][synth] tested test/ppc/safe432(#f)
[8.96s; 1ms][synth] tested test/ppc/safe434(#f)
[8.96s; 1ms][synth] tested test/ppc/safe438(#f)
[8.96s; 1ms][synth] tested test/ppc/safe439(#f)
[8.97s; 1ms][synth] tested test/ppc/safe440(#f)
[8.97s; 1ms][synth] tested test/ppc/safe442(#f)
[8.97s; 1ms][synth] tested test/ppc/safe443(#f)
[8.97s; 1ms][synth] tested test/ppc/safe444(#f)
[8.97s; 1ms][synth] tested test/ppc/safe445(#f)
[8.97s; 1ms][synth] tested test/ppc/safe446(#f)
[8.97s; 1ms][synth] tested test/ppc/safe448(#f)
[8.97s; 1ms][synth] tested test/ppc/safe449(#f)
[8.97s; 1ms][synth] tested test/ppc/safe451(#f)
[8.98s; 1ms][synth] tested test/ppc/safe452(#f)
[8.98s; 1ms][synth] tested test/ppc/safe453(#f)
[8.98s; 1ms][synth] tested test/ppc/safe455(#f)
[8.98s; 1ms][synth] tested test/ppc/safe456(#f)
[8.98s; 1ms][synth] tested test/ppc/safe458(#f)
[8.98s; 1ms][synth] tested test/ppc/safe459(#f)
[8.98s; 1ms][synth] tested test/ppc/safe461(#f)
[8.98s; 1ms][synth] tested test/ppc/safe462(#f)
[8.98s; 1ms][synth] tested test/ppc/safe464(#f)
[8.98s; 1ms][synth] tested test/ppc/safe466(#f)
[8.99s; 1ms][synth] tested test/ppc/safe467(#f)
[8.99s; 1ms][synth] tested test/ppc/safe469(#f)
[8.99s; 1ms][synth] tested test/ppc/safe471(#f)
[8.99s; 1ms][synth] tested test/ppc/safe472(#f)
[8.99s; 1ms][synth] tested test/ppc/safe473(#f)
[8.99s; 1ms][synth] tested test/ppc/safe474(#f)
[8.99s; 1ms][synth] tested test/ppc/safe476(#f)
[8.99s; 1ms][synth] tested test/ppc/safe477(#f)
[8.99s; 1ms][synth] tested test/ppc/safe479(#f)
[9s; 1ms][synth] tested test/ppc/safe481(#f)
[9s; 1ms][synth] tested test/ppc/safe483(#f)
[9s; 1ms][synth] tested test/ppc/safe487(#f)
[9s; 1ms][synth] tested test/ppc/safe489(#f)
[9s; 1ms][synth] tested test/ppc/safe490(#f)
[9s; 1ms][synth] tested test/ppc/safe492(#f)
[9s; 1ms][synth] tested test/ppc/safe493(#f)
[9s; 1ms][synth] tested test/ppc/safe494(#f)
[9s; 1ms][synth] tested test/ppc/safe498(#f)
[9.01s; 1ms][synth] tested test/ppc/safe499(#f)
[9.01s; 1ms][synth] tested test/ppc/safe500(#f)
[9.01s; 1ms][synth] tested test/ppc/safe502(#f)
[9.01s; 1ms][synth] tested test/ppc/safe507(#f)
[9.01s; 1ms][synth] tested test/ppc/safe509(#f)
[9.01s; 1ms][synth] tested test/ppc/safe510(#f)
[9.01s; 1ms][synth] tested test/ppc/safe512(#f)
[9.01s; 1ms][synth] tested test/ppc/safe513(#f)
[9.01s; 1ms][synth] tested test/ppc/safe523(#f)
[9.02s; 1ms][synth] tested test/ppc/safe524(#f)
[9.02s; 1ms][synth] tested test/ppc/safe526(#f)
[9.02s; 1ms][synth] tested test/ppc/safe528(#f)
[9.02s; 1ms][synth] tested test/ppc/safe529(#f)
[9.02s; 1ms][synth] tested test/ppc/safe530(#f)
[9.02s; 1ms][synth] tested test/ppc/safe532(#f)
[9.02s; 1ms][synth] tested test/ppc/safe533(#f)
[9.02s; 1ms][synth] tested test/ppc/safe534(#f)
[9.02s; 1ms][synth] tested test/ppc/safe535(#f)
[9.02s; 1ms][synth] tested test/ppc/safe539(#f)
[9.03s; 1ms][synth] tested test/ppc/safe540(#f)
[9.03s; 1ms][synth] tested test/ppc/safe542(#f)
[9.03s; 1ms][synth] tested test/ppc/safe543(#f)
[9.03s; 1ms][synth] tested test/ppc/safe545(#f)
[9.03s; 1ms][synth] tested test/ppc/safe546(#f)
[9.03s; 1ms][synth] tested test/ppc/safe547(#f)
[9.03s; 1ms][synth] tested test/ppc/safe552(#f)
[9.03s; 1ms][synth] tested test/ppc/safe553(#f)
[9.03s; 1ms][synth] tested test/ppc/safe555(#f)
[9.04s; 1ms][synth] tested test/ppc/safe557(#f)
[9.04s; 1ms][synth] tested test/ppc/safe559(#f)
[9.04s; 1ms][synth] tested test/ppc/safe560(#f)
[9.04s; 1ms][synth] tested test/ppc/safe561(#f)
[9.04s; 1ms][synth] tested test/ppc/safe563(#f)
[9.04s; 1ms][synth] tested test/ppc/safe566(#f)
[9.04s; 1ms][synth] tested test/ppc/podrwposwr003(#t)
[9.04s; 1ms][synth] tested test/ppc/podrwposwr009(#t)
[9.04s; 1ms][synth] tested test/ppc/podrwposwr021(#t)
[9.05s; 1ms][synth] tested test/ppc/podrwposwr022(#t)
[9.05s; 1ms][synth] tested test/ppc/podrwposwr032(#t)
[9.05s; 1ms][synth] tested test/ppc/podrwposwr033(#t)
[9.05s; 1ms][synth] tested test/ppc/podrwposwr036(#t)
[9.05s; 1ms][synth] tested test/ppc/podrwposwr037(#t)
[9.05s; 1ms][synth] tested test/ppc/podrwposwr039(#t)
[9.05s; 1ms][synth] tested test/ppc/podrwposwr040(#t)
[9.05s; 1ms][synth] tested test/ppc/podrwposwr049(#t)
[9.06s; 1ms][synth] tested test/ppc/podrwposwr050(#t)
[9.06s; 1ms][synth] tested test/ppc/podrwposwr053(#t)
[9.06s; 1ms][synth] tested test/ppc/podrwposwr054(#t)
[9.06s; 1ms][synth] tested test/ppc/podrwposwr056(#t)
[9.06s; 1ms][synth] tested test/ppc/podrwposwr057(#t)
[9.06s; 1ms][synth] tested test/ppc/podrwposwr061(#t)
[9.06s; 1ms][synth] tested test/ppc/podrwposwr062(#t)
[9.06s; 1ms][synth] tested test/ppc/podrwposwr065(#t)
[9.07s; 1ms][synth] tested test/ppc/podrwposwr066(#t)
[9.07s; 1ms][synth] tested test/ppc/podrwposwr068(#t)
[9.07s; 1ms][synth] tested test/ppc/podrwposwr069(#t)
[9.07s; 1ms][synth] tested test/ppc/lwswr000(#t)
[9.07s; 1ms][synth] tested test/ppc/podrw004(#t)
[9.07s; 1ms][synth] tested test/ppc/podrwposwr024(#t)
[9.07s; 1ms][synth] tested test/ppc/podrwposwr025(#t)
[9.08s; 1ms][synth] tested test/ppc/podrwposwr042(#t)

Synthesis complete!
time: 8925 ms
tests used: 19/768

solution: ppo: (& po (- (& (-> (- MemoryEvent Writes) MemoryEvent) (& po (-> MemoryEvent MemoryEvent))) (- (-> (+ Writes Reads) (+ Writes Reads)) (& po dp))))
          grf: (-> none none)
           ab: (+ (+ (+ (<: (join Reads (join (:> po Syncs) po)) (+ rf (join (:> po Syncs) po))) (+ (join rf (join (:> po Syncs) po)) (<: Reads (join (:> po Syncs) po)))) (+ (<: Writes (<: Writes (join (:> po Syncs) po))) (<: (join Writes (join (:> po Syncs) po)) (<: Writes rf)))) (<: (join (+ (:> rf Reads) (+ rf (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)))) (+ Writes Reads)) (+ (:> (join (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) rf) (join (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) Writes)) (:> (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) (join Writes (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)))))))

Verifying solution...
Verified 768 litmus tests


----- Making PPC_0 unique... -----
Litmus test sketch:
  Up to 4 threads, with up to 6 total instructions.

Making model unique...
[0s; 0ms][unique] Trying topology (litmus-test-topology '(1 1) '(0 1)); polarity #t
[0s; 4ms][unique/synth] added sketched test on concrete model
[0.24s; 233ms][unique/synth] added sketched test on symbolic model
[0.49s; 255ms][unique/synth] candidate is unsat
[0.49s; 0ms][unique] Trying topology (litmus-test-topology '(1 1) '(0 1)); polarity #f
[0.5s; 4ms][unique/synth] added sketched test on concrete model
[0.69s; 193ms][unique/synth] added sketched test on symbolic model
[0.85s; 165ms][unique/synth] candidate is unsat
[0.85s; 0ms][unique] Trying topology (litmus-test-topology '(2 1) '(0 1)); polarity #t
[0.86s; 8ms][unique/synth] added sketched test on concrete model
[1.18s; 313ms][unique/synth] added sketched test on symbolic model
[1.61s; 438ms][unique/synth] candidate is unsat
[1.61s; 0ms][unique] Trying topology (litmus-test-topology '(2 1) '(0 1)); polarity #f
[1.62s; 9ms][unique/synth] added sketched test on concrete model
[1.94s; 320ms][unique/synth] added sketched test on symbolic model
[26.78s; 24842ms][unique/synth] candidate is unsat
[26.78s; 0ms][unique] Trying topology (litmus-test-topology '(2 1) '(1 0)); polarity #t
[26.79s; 8ms][unique/synth] added sketched test on concrete model
[27.1s; 311ms][unique/synth] added sketched test on symbolic model
[27.56s; 458ms][unique/synth] candidate is unsat
[27.56s; 0ms][unique] Trying topology (litmus-test-topology '(2 1) '(1 0)); polarity #f
[27.57s; 7ms][unique/synth] added sketched test on concrete model
[27.88s; 312ms][unique/synth] added sketched test on symbolic model
[319.9s; 292021ms][unique/synth] candidate is unsat
[319.9s; 0ms][unique] Trying topology (litmus-test-topology '(2 1) '(1 1)); polarity #t
[319.91s; 8ms][unique/synth] added sketched test on concrete model
[320.22s; 310ms][unique/synth] added sketched test on symbolic model
[320.59s; 367ms][unique/synth] candidate is unsat
[320.59s; 0ms][unique] Trying topology (litmus-test-topology '(2 1) '(1 1)); polarity #f
[320.6s; 9ms][unique/synth] added sketched test on concrete model
[320.9s; 306ms][unique/synth] added sketched test on symbolic model
[348.58s; 27672ms][unique/synth] candidate is unsat
[348.58s; 0ms][unique] Trying topology (litmus-test-topology '(2 1) '(2 0)); polarity #t
[348.58s; 8ms][unique/synth] added sketched test on concrete model
[348.87s; 282ms][unique/synth] added sketched test on symbolic model
[349.19s; 322ms][unique/synth] candidate is unsat
[349.19s; 0ms][unique] Trying topology (litmus-test-topology '(2 1) '(2 0)); polarity #f
[349.2s; 9ms][unique/synth] added sketched test on concrete model
[349.48s; 284ms][unique/synth] added sketched test on symbolic model
[394.82s; 45344ms][unique/synth] candidate is unsat
[394.83s; 0ms][unique] Trying topology (litmus-test-topology '(1 1 1) '(0 0 1)); polarity #t
[394.83s; 7ms][unique/synth] added sketched test on concrete model
[395.13s; 293ms][unique/synth] added sketched test on symbolic model
[395.44s; 310ms][unique/synth] candidate is unsat
[395.44s; 0ms][unique] Trying topology (litmus-test-topology '(1 1 1) '(0 0 1)); polarity #f
[395.44s; 6ms][unique/synth] added sketched test on concrete model
[395.74s; 297ms][unique/synth] added sketched test on symbolic model
[396s; 256ms][unique/synth] candidate is unsat
[396s; 0ms][unique] Trying topology (litmus-test-topology '(1 1 1) '(0 1 1)); polarity #t
[396s; 9ms][unique/synth] added sketched test on concrete model
[396.29s; 285ms][unique/synth] added sketched test on symbolic model
[396.59s; 295ms][unique/synth] candidate is unsat
[396.59s; 0ms][unique] Trying topology (litmus-test-topology '(1 1 1) '(0 1 1)); polarity #f
[396.6s; 11ms][unique/synth] added sketched test on concrete model
[396.87s; 276ms][unique/synth] added sketched test on symbolic model
[600.78s; 203911ms][unique/synth] candidate is unsat
[600.78s; 0ms][unique] Trying topology (litmus-test-topology '(2 2) '(0 1)); polarity #t
[600.79s; 11ms][unique/synth] added sketched test on concrete model
[601.27s; 476ms][unique/synth] added sketched test on symbolic model
[602.15s; 877ms][unique/synth] candidate is unsat
[602.15s; 0ms][unique] Trying topology (litmus-test-topology '(2 2) '(0 1)); polarity #f
[602.16s; 11ms][unique/synth] added sketched test on concrete model
[602.69s; 534ms][unique/synth] added sketched test on symbolic model
[1347.33s; 744635ms][unique/synth] candidate is unsat
[1347.33s; 0ms][unique] Trying topology (litmus-test-topology '(2 2) '(0 2)); polarity #t
[1347.34s; 13ms][unique/synth] added sketched test on concrete model
[1347.78s; 441ms][unique/synth] added sketched test on symbolic model
[1348.42s; 638ms][unique/synth] candidate is unsat
[1348.42s; 0ms][unique] Trying topology (litmus-test-topology '(2 2) '(0 2)); polarity #f
[1348.43s; 12ms][unique/synth] added sketched test on concrete model
[1348.88s; 448ms][unique/synth] added sketched test on symbolic model
[1373.08s; 24200ms][unique/synth] found candidate: (memory-model anon
        ppo: (& po (-> (& MemoryEvent (+ Writes Reads)) (+ Writes (& (+ Writes Reads) (- Reads Writes)))))
        grf: (& (join loc (~ loc)) rf)
         ab: (+ (:> (:> (:> (:> rf Reads) (<: Writes Reads)) (join (+ Writes Reads) (:> rf Reads))) (:> (:> (:> Reads Writes) (join Writes rf)) (join (:> rf Reads) Reads))) (:> (:> (:> (:> rf Reads) (join Writes rf)) (join Writes (:> rf Reads))) (+ (+ (join Writes rf) (:> Reads Writes)) (:> Reads (join Writes rf)))))
       llh?: #f)
[1373.08s; 0ms][unique/synth] test: (litmus-test 'T (Program (list (Thread 0 (list (Read 0 0 0 '() 'B 1) (Read 1 1 0 '() 'A 0))) (Thread 1 (list (Write 2 0 1 '() 'A 1) (Write 3 1 1 '() 'B 1))))) '() '())
[1373.08s; 0ms][unique/synth] allowed by existing? #t
[1373.08s; 0ms][unique/synth] allowed by candidate? #f
[1373.08s; 0ms][unique/synth] tested test/ppc/podwr000(#t)
[1373.08s; 0ms][unique/synth] found next test
[1373.36s; 276ms][unique/synth] interpreted test test/ppc/podwr000(#t)
[1373.69s; 327ms][unique/synth] found candidate: (memory-model anon
        ppo: (& po (- (- (+ po (& (join loc (~ loc)) (-> Writes Writes))) (-> (- Writes Reads) (- Reads Writes))) (- (& (join loc (~ loc)) (-> Writes Writes)) po)))
        grf: rf
         ab: (+ (:> (:> (:> (:> (join (:> po Syncs) po) Reads) Reads) Reads) Reads) (:> (:> (:> (:> (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) Reads) Reads) Reads) Reads))
       llh?: #f)
[1373.69s; 0ms][unique/synth] test: (litmus-test 'T (Program (list (Thread 0 (list (Read 0 0 0 '() 'A 1) (Read 1 1 0 '() 'B 0))) (Thread 1 (list (Write 2 0 1 '() 'B 1) (Write 3 1 1 '() 'A 1))))) '() '())
[1373.69s; 0ms][unique/synth] allowed by existing? #t
[1373.69s; 0ms][unique/synth] allowed by candidate? #f
[1373.69s; 0ms][unique/synth] tested test/ppc/podww000(#t)
[1373.69s; 0ms][unique/synth] found next test
[1373.96s; 270ms][unique/synth] interpreted test test/ppc/podww000(#t)
[1374.09s; 125ms][unique/synth] candidate is unsat
[1374.09s; 0ms][unique] Trying topology (litmus-test-topology '(2 2) '(1 1)); polarity #t
[1374.1s; 13ms][unique/synth] added sketched test on concrete model
[1374.55s; 456ms][unique/synth] added sketched test on symbolic model
[1375.32s; 764ms][unique/synth] candidate is unsat
[1375.32s; 0ms][unique] Trying topology (litmus-test-topology '(2 2) '(1 1)); polarity #f
[1375.33s; 12ms][unique/synth] added sketched test on concrete model
[1375.8s; 469ms][unique/synth] added sketched test on symbolic model
[1391.88s; 16079ms][unique/synth] found candidate: (memory-model anon
        ppo: (& po (-> (- Writes (& (+ Writes Reads) (- Reads Writes))) (+ Writes Reads)))
        grf: (-> none none)
         ab: (+ (:> (:> (join (:> rf Reads) (:> rf Reads)) (join (+ Writes Reads) (:> rf Reads))) (join (<: (+ Writes Reads) (:> rf Reads)) (+ Reads (<: Writes Reads)))) (:> (:> (:> (+ rf (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po))) Writes) (join (+ Writes Reads) (:> rf Reads))) (:> (:> Writes (join rf Reads)) (:> (:> Writes Reads) (:> Reads Writes)))))
       llh?: #f)
[1391.88s; 0ms][unique/synth] test: (litmus-test 'T (Program (list (Thread 0 (list (Write 0 0 0 '() 'A 1) (Read 1 1 0 '() 'B 0))) (Thread 1 (list (Write 2 0 1 '() 'B 1) (Read 3 1 1 '() 'A 0))))) '() '())
[1391.88s; 0ms][unique/synth] allowed by existing? #t
[1391.88s; 0ms][unique/synth] allowed by candidate? #f
[1391.88s; 0ms][unique/synth] tested test/ppc/podwr000(#t)
[1391.88s; 0ms][unique/synth] found next test
[1392.16s; 276ms][unique/synth] interpreted test test/ppc/podwr000(#t)
[1392.59s; 426ms][unique/synth] found candidate: (memory-model anon
        ppo: (& po (-> (- (- Reads Writes) Writes) (+ Reads MemoryEvent)))
        grf: (-> none none)
         ab: (+ (:> (:> (:> (:> (join (:> po Syncs) po) Reads) (:> Reads Writes)) (join (:> (join (:> po Syncs) po) Reads) Reads)) (+ Reads (join (:> (join (:> po Syncs) po) Reads) Reads))) (+ (<: Reads (:> (:> (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) Reads) Reads)) (+ (:> (:> rf Reads) (join Writes rf)) (:> (:> (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) Writes) Reads))))
       llh?: #f)
[1392.59s; 0ms][unique/synth] test: (litmus-test 'T (Program (list (Thread 0 (list (Read 0 0 0 '() 'B 1) (Write 1 1 0 '() 'A 1))) (Thread 1 (list (Read 2 0 1 '() 'A 1) (Write 3 1 1 '() 'B 1))))) '() '())
[1392.59s; 0ms][unique/synth] allowed by existing? #t
[1392.59s; 0ms][unique/synth] allowed by candidate? #f
[1392.59s; 0ms][unique/synth] tested test/ppc/podww000(#t)
[1392.59s; 0ms][unique/synth] tested test/ppc/rfe000(#f)
[1392.59s; 0ms][unique/synth] tested test/ppc/bclwdww000(#t)
[1392.59s; 0ms][unique/synth] tested test/ppc/bclwdww019(#t)
[1392.59s; 0ms][unique/synth] tested test/ppc/podrr000(#t)
[1392.59s; 0ms][unique/synth] tested test/ppc/podrw000(#t)
[1392.59s; 0ms][unique/synth] tested test/ppc/rfe002(#t)
[1392.59s; 0ms][unique/synth] found next test
[1392.96s; 371ms][unique/synth] interpreted test test/ppc/rfe002(#t)
[1393.11s; 148ms][unique/synth] found candidate: (memory-model anon
        ppo: (& po (- (& (- po dp) (-> MemoryEvent (+ Writes Reads))) (+ (& (-> Writes MemoryEvent) (-> Writes Reads)) (-> Writes (& Writes Reads)))))
        grf: (& (join loc (~ loc)) rf)
         ab: (+ (:> (:> (:> (:> (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) Reads) Reads) Reads) Reads) (:> (:> (:> (:> (join (:> po Syncs) po) Reads) Reads) (join (<: Reads (join (:> po Syncs) po)) Reads)) Reads))
       llh?: #f)
[1393.11s; 0ms][unique/synth] test: (litmus-test 'T (Program (list (Thread 0 (list (Read 0 0 0 '() 'B 1) (Write 1 1 0 '() 'A 1))) (Thread 1 (list (Read 2 0 1 '() 'A 1) (Write 3 1 1 '() 'B 1))))) '() '())
[1393.12s; 0ms][unique/synth] allowed by existing? #t
[1393.12s; 0ms][unique/synth] allowed by candidate? #f
[1393.12s; 0ms][unique/synth] tested test/ppc/podww000(#t)
[1393.12s; 0ms][unique/synth] found next test
[1393.39s; 272ms][unique/synth] interpreted test test/ppc/podww000(#t)
[1393.43s; 43ms][unique/synth] found candidate: (memory-model anon
        ppo: (& po (- (& (- po (& (join loc (~ loc)) (-> Reads Reads))) (- (-> MemoryEvent MemoryEvent) dp)) (+ (-> Writes (& Writes Reads)) (& (-> MemoryEvent MemoryEvent) (-> Writes MemoryEvent)))))
        grf: rf
         ab: (+ (:> (:> (:> (& (+ (-> Reads MemoryEvent) (-> Writes Writes)) (join (:> po Lwsyncs) po)) Reads) Reads) Reads) (:> (:> (:> (:> (join (:> po Syncs) po) Reads) Reads) (join (<: Reads (join (:> po Syncs) po)) Reads)) Reads))
       llh?: #f)
[1393.43s; 0ms][unique/synth] test: (litmus-test 'T (Program (list (Thread 0 (list (Read 0 0 0 '() 'B 1) (Write 1 1 0 '() 'A 1))) (Thread 1 (list (Read 2 0 1 '() 'A 1) (Write 3 1 1 '() 'B 1))))) '() '())
[1393.43s; 0ms][unique/synth] allowed by existing? #t
[1393.43s; 0ms][unique/synth] allowed by candidate? #f
[1393.43s; 0ms][unique/synth] tested test/ppc/rfe000(#f)
[1393.43s; 0ms][unique/synth] tested test/ppc/bclwdww000(#t)
[1393.44s; 0ms][unique/synth] tested test/ppc/bclwdww019(#t)
[1393.44s; 0ms][unique/synth] tested test/ppc/podrr000(#t)
[1393.44s; 0ms][unique/synth] tested test/ppc/podrw000(#t)
[1393.44s; 0ms][unique/synth] tested test/ppc/rfe003(#t)
[1393.44s; 0ms][unique/synth] tested test/ppc/safe011(#f)
[1393.44s; 0ms][unique/synth] found next test
[1393.8s; 362ms][unique/synth] interpreted test test/ppc/safe011(#f)
[1394.3s; 500ms][unique/synth] candidate is unsat
[1394.3s; 0ms][unique] Trying topology (litmus-test-topology '(2 2) '(1 2)); polarity #t
[1394.31s; 12ms][unique/synth] added sketched test on concrete model
[1394.72s; 410ms][unique/synth] added sketched test on symbolic model
[1395.15s; 432ms][unique/synth] candidate is unsat
[1395.15s; 0ms][unique] Trying topology (litmus-test-topology '(2 2) '(1 2)); polarity #f
[1395.17s; 12ms][unique/synth] added sketched test on concrete model
[1395.58s; 409ms][unique/synth] added sketched test on symbolic model
[1515.29s; 119710ms][unique/synth] candidate is unsat
[1515.29s; 0ms][unique] Trying topology (litmus-test-topology '(3 1) '(0 1)); polarity #t
[1515.3s; 14ms][unique/synth] added sketched test on concrete model
[1516s; 698ms][unique/synth] added sketched test on symbolic model
[1517.29s; 1290ms][unique/synth] candidate is unsat
[1517.29s; 0ms][unique] Trying topology (litmus-test-topology '(3 1) '(0 1)); polarity #f
[1517.3s; 14ms][unique/synth] added sketched test on concrete model
[1518.02s; 718ms][unique/synth] added sketched test on symbolic model
